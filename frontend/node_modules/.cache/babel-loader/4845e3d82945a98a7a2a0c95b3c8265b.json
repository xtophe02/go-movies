{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/movie-graphql.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieGraphql() {\n  _s();\n\n  let params = useParams();\n  const [state, setState] = useState({\n    loading: true,\n    movie: {},\n    error: null\n  });\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const query = `{\n      movie (id: \"${params.id}\") {\n        id\n        title\n        year\n        description\n        runtime\n        mpaa_rating\n        rating\n        release_date\n        year\n        genres\n      }\n    }`;\n    fetch(\"http://localhost:4000/v1/graphql\", {\n      signal: signal,\n      method: \"post\",\n      body: query,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(_ref => {\n      let {\n        data\n      } = _ref;\n      // console.log(data);\n      setState({\n        movies: data.allMovies,\n        loading: false,\n        clear: false\n      });\n    }).catch(err => {\n      if (err.name === \"AbortError\") {\n        console.log(\"successfully aborted\");\n      } else {\n        console.log(err); // setError(err);\n      }\n    });\n    return () => controller.abort();\n  }, [params.id]);\n\n  if (state.loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (state.error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: state.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n\n  const {\n    movie: {\n      title,\n      runtime,\n      description,\n      mpaa_rating,\n      rating,\n      release_date,\n      year,\n      genres\n    }\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title is-3\",\n      children: [title, \" (\", year, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-striped is-fullwidth\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Run Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: runtime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"MPAA Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: mpaa_rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Release Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(release_date).toLocaleDateString(\"pt-pt\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Genres:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: genres && Object.values(genres).map(g => `${g} `)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MovieGraphql, \"to30g0eEsUO+y8oKVAwRvLlIbKQ=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieGraphql;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieGraphql\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/movie-graphql.js"],"names":["useParams","useEffect","useState","MovieGraphql","params","state","setState","loading","movie","error","controller","AbortController","signal","query","id","fetch","method","body","headers","then","res","json","data","movies","allMovies","clear","catch","err","name","console","log","abort","title","runtime","description","mpaa_rating","rating","release_date","year","genres","Date","toLocaleDateString","Object","values","map","g"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nexport default function MovieGraphql() {\n  let params = useParams();\n  const [state, setState] = useState({ loading: true, movie: {}, error: null });\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const query = `{\n      movie (id: \"${params.id}\") {\n        id\n        title\n        year\n        description\n        runtime\n        mpaa_rating\n        rating\n        release_date\n        year\n        genres\n      }\n    }`;\n    fetch(\"http://localhost:4000/v1/graphql\", {\n      signal: signal,\n      method: \"post\",\n      body: query,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then(({ data }) => {\n        // console.log(data);\n        setState({ movies: data.allMovies, loading: false, clear: false });\n      })\n      .catch((err) => {\n        if (err.name === \"AbortError\") {\n          console.log(\"successfully aborted\");\n        } else {\n          console.log(err);\n          // setError(err);\n        }\n      });\n    return () => controller.abort();\n  }, [params.id]);\n  if (state.loading) {\n    return <p>loading...</p>;\n  }\n  if (state.error) {\n    return <p>{state.error}</p>;\n  }\n  const {\n    movie: {\n      title,\n      runtime,\n      description,\n      mpaa_rating,\n      rating,\n      release_date,\n      year,\n      genres,\n    },\n  } = state;\n\n  return (\n    <>\n      <h3 className=\"title is-3\">\n        {title} ({year})\n      </h3>\n      <table className=\"table is-striped is-fullwidth\">\n        <tbody>\n          <tr>\n            <th>Title:</th>\n            <td>{title}</td>\n          </tr>\n          <tr>\n            <th>Run Time:</th>\n            <td>{runtime}</td>\n          </tr>\n          <tr>\n            <th>Description:</th>\n            <td>{description}</td>\n          </tr>\n          <tr>\n            <th>MPAA Rating:</th>\n            <td>{mpaa_rating}</td>\n          </tr>\n          <tr>\n            <th>Rating:</th>\n            <td>{rating}</td>\n          </tr>\n          <tr>\n            <th>Release Date:</th>\n            <td>{new Date(release_date).toLocaleDateString(\"pt-pt\")}</td>\n          </tr>\n          <tr>\n            <th>Year:</th>\n            <td>{year}</td>\n          </tr>\n          <tr>\n            <th>Genres:</th>\n            <td>{genres && Object.values(genres).map((g) => `${g} `)}</td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}