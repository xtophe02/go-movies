{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/lazy-movies-edit.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetchMovies = async () => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/movies`);\n\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport default function LazyMovies() {\n  _s();\n\n  const [state, setState] = useState({\n    movie: {}\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovieByID(params.id);\n\n      if (!res.movie) {\n        setState(prev => ({ ...prev,\n          loading: false,\n          error: res\n        }));\n      } else {\n        setState(prev => ({ ...prev,\n          loading: false,\n          movie: res.movie\n        }));\n      }\n    };\n\n    fetchData();\n  }, []);\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"g\",\n      children: \"G\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"pg\",\n      children: \"PG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"pg13\",\n      children: \"PG13\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"R\",\n      children: \"R\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"nc17\",\n      children: \"NC17\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LazyMovies, \"g1rmXDVvl0/xQLdX1hA2q/tXBxc=\");\n\n_c = LazyMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"LazyMovies\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/lazy-movies-edit.js"],"names":["useState","useEffect","fetchMovies","res","fetch","ok","console","log","Error","statusText","json","error","message","LazyMovies","state","setState","movie","fetchData","fetchMovieByID","params","id","prev","loading"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,WAAW,GAAG,YAAY;AAC9B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,iCAAF,CAAvB;;AACA,QAAI,CAACD,GAAG,CAACE,EAAT,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,YAAM,IAAIK,KAAJ,CAAUL,GAAG,CAACM,UAAd,CAAN;AACD;;AACD,WAAON,GAAG,CAACO,IAAJ,EAAP;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CAXD;;AAYA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC;AAAEgB,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAlC;AACAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,SAAS,GAAG,YAAY;AAC5B,YAAMd,GAAG,GAAG,MAAMe,cAAc,CAACC,MAAM,CAACC,EAAR,CAAhC;;AACA,UAAI,CAACjB,GAAG,CAACa,KAAT,EAAgB;AACdD,QAAAA,QAAQ,CAAEM,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWC,UAAAA,OAAO,EAAE,KAApB;AAA2BX,UAAAA,KAAK,EAAER;AAAlC,SAAX,CAAD,CAAR;AACD,OAFD,MAEO;AACLY,QAAAA,QAAQ,CAAEM,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWC,UAAAA,OAAO,EAAE,KAApB;AAA2BN,UAAAA,KAAK,EAAEb,GAAG,CAACa;AAAtC,SAAX,CAAD,CAAR;AACD;AACF,KAPD;;AAQAC,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAWAX,EAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;GAvBuBD,U;;KAAAA,U","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst fetchMovies = async () => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/movies`);\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\nexport default function LazyMovies() {\n  const [state, setState] = useState({ movie: {} });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovieByID(params.id);\n      if (!res.movie) {\n        setState((prev) => ({ ...prev, loading: false, error: res }));\n      } else {\n        setState((prev) => ({ ...prev, loading: false, movie: res.movie }));\n      }\n    };\n    fetchData();\n  }, []);\n  console.log(state);\n  return (\n    <>\n      <option value=\"g\">G</option>\n      <option value=\"pg\">PG</option>\n      <option value=\"pg13\">PG13</option>\n      <option value=\"R\">R</option>\n      <option value=\"nc17\">NC17</option>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}