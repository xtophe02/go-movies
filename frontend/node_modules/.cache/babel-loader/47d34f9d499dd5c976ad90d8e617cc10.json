{"ast":null,"code":"import { isInRange } from '../lib/utils.js';\nimport { isActiveElement } from '../lib/dom.js';\nimport { addDays, addMonths, addYears, startOfYearPeriod } from '../lib/date.js';\nimport { goToPrevOrNext, switchView, unfocus } from './functions.js'; // Find the closest date that doesn't meet the condition for unavailable date\n// Returns undefined if no available date is found\n// addFn: function to calculate the next date\n//   - args: time value, amount\n// increase: amount to pass to addFn\n// testFn: function to test the unavailablity of the date\n//   - args: time value; retun: true if unavailable\n\nfunction findNextAvailableOne(date, addFn, increase, testFn, min, max) {\n  if (!isInRange(date, min, max)) {\n    return;\n  }\n\n  if (testFn(date)) {\n    const newDate = addFn(date, increase);\n    return findNextAvailableOne(newDate, addFn, increase, testFn, min, max);\n  }\n\n  return date;\n} // direction: -1 (left/up), 1 (right/down)\n// vertical: true for up/down, false for left/right\n\n\nfunction moveByArrowKey(datepicker, ev, direction, vertical) {\n  const picker = datepicker.picker;\n  const currentView = picker.currentView;\n  const step = currentView.step || 1;\n  let viewDate = picker.viewDate;\n  let addFn;\n  let testFn;\n\n  switch (currentView.id) {\n    case 0:\n      if (vertical) {\n        viewDate = addDays(viewDate, direction * 7);\n      } else if (ev.ctrlKey || ev.metaKey) {\n        viewDate = addYears(viewDate, direction);\n      } else {\n        viewDate = addDays(viewDate, direction);\n      }\n\n      addFn = addDays;\n\n      testFn = date => currentView.disabled.includes(date);\n\n      break;\n\n    case 1:\n      viewDate = addMonths(viewDate, vertical ? direction * 4 : direction);\n      addFn = addMonths;\n\n      testFn = date => {\n        const dt = new Date(date);\n        const {\n          year,\n          disabled\n        } = currentView;\n        return dt.getFullYear() === year && disabled.includes(dt.getMonth());\n      };\n\n      break;\n\n    default:\n      viewDate = addYears(viewDate, direction * (vertical ? 4 : 1) * step);\n      addFn = addYears;\n\n      testFn = date => currentView.disabled.includes(startOfYearPeriod(date, step));\n\n  }\n\n  viewDate = findNextAvailableOne(viewDate, addFn, direction < 0 ? -step : step, testFn, currentView.minDate, currentView.maxDate);\n\n  if (viewDate !== undefined) {\n    picker.changeFocus(viewDate).render();\n  }\n}\n\nexport function onKeydown(datepicker, ev) {\n  const key = ev.key;\n\n  if (key === 'Tab') {\n    unfocus(datepicker);\n    return;\n  }\n\n  const picker = datepicker.picker;\n  const {\n    id,\n    isMinView\n  } = picker.currentView;\n\n  if (!picker.active) {\n    if (key === 'ArrowDown') {\n      picker.show();\n    } else {\n      if (key === 'Enter') {\n        datepicker.update();\n      } else if (key === 'Escape') {\n        picker.show();\n      }\n\n      return;\n    }\n  } else if (datepicker.editMode) {\n    if (key === 'Enter') {\n      datepicker.exitEditMode({\n        update: true,\n        autohide: datepicker.config.autohide\n      });\n    } else if (key === 'Escape') {\n      picker.hide();\n    }\n\n    return;\n  } else {\n    if (key === 'ArrowLeft') {\n      if (ev.ctrlKey || ev.metaKey) {\n        goToPrevOrNext(datepicker, -1);\n      } else if (ev.shiftKey) {\n        datepicker.enterEditMode();\n        return;\n      } else {\n        moveByArrowKey(datepicker, ev, -1, false);\n      }\n    } else if (key === 'ArrowRight') {\n      if (ev.ctrlKey || ev.metaKey) {\n        goToPrevOrNext(datepicker, 1);\n      } else if (ev.shiftKey) {\n        datepicker.enterEditMode();\n        return;\n      } else {\n        moveByArrowKey(datepicker, ev, 1, false);\n      }\n    } else if (key === 'ArrowUp') {\n      if (ev.ctrlKey || ev.metaKey) {\n        switchView(datepicker);\n      } else if (ev.shiftKey) {\n        datepicker.enterEditMode();\n        return;\n      } else {\n        moveByArrowKey(datepicker, ev, -1, true);\n      }\n    } else if (key === 'ArrowDown') {\n      if (ev.shiftKey && !ev.ctrlKey && !ev.metaKey) {\n        datepicker.enterEditMode();\n        return;\n      }\n\n      moveByArrowKey(datepicker, ev, 1, true);\n    } else if (key === 'Enter') {\n      if (isMinView) {\n        datepicker.setDate(picker.viewDate);\n        return;\n      }\n\n      picker.changeView(id - 1).render();\n    } else {\n      if (key === 'Escape') {\n        picker.hide();\n      } else if (key === 'Backspace' || key === 'Delete' || key.length === 1 && !ev.ctrlKey && !ev.metaKey) {\n        datepicker.enterEditMode();\n      }\n\n      return;\n    }\n  }\n\n  ev.preventDefault();\n}\nexport function onFocus(datepicker) {\n  if (datepicker.config.showOnFocus && !datepicker._showing) {\n    datepicker.show();\n  }\n} // for the prevention for entering edit mode while getting focus on click\n\nexport function onMousedown(datepicker, ev) {\n  const el = ev.target;\n\n  if (datepicker.picker.active || datepicker.config.showOnClick) {\n    el._active = isActiveElement(el);\n    el._clicking = setTimeout(() => {\n      delete el._active;\n      delete el._clicking;\n    }, 2000);\n  }\n}\nexport function onClickInput(datepicker, ev) {\n  const el = ev.target;\n\n  if (!el._clicking) {\n    return;\n  }\n\n  clearTimeout(el._clicking);\n  delete el._clicking;\n\n  if (el._active) {\n    datepicker.enterEditMode();\n  }\n\n  delete el._active;\n\n  if (datepicker.config.showOnClick) {\n    datepicker.show();\n  }\n}\nexport function onPaste(datepicker, ev) {\n  if (ev.clipboardData.types.includes('text/plain')) {\n    datepicker.enterEditMode();\n  }\n}","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/node_modules/vanillajs-datepicker/js/events/inputFieldListeners.js"],"names":["isInRange","isActiveElement","addDays","addMonths","addYears","startOfYearPeriod","goToPrevOrNext","switchView","unfocus","findNextAvailableOne","date","addFn","increase","testFn","min","max","newDate","moveByArrowKey","datepicker","ev","direction","vertical","picker","currentView","step","viewDate","id","ctrlKey","metaKey","disabled","includes","dt","Date","year","getFullYear","getMonth","minDate","maxDate","undefined","changeFocus","render","onKeydown","key","isMinView","active","show","update","editMode","exitEditMode","autohide","config","hide","shiftKey","enterEditMode","setDate","changeView","length","preventDefault","onFocus","showOnFocus","_showing","onMousedown","el","target","showOnClick","_active","_clicking","setTimeout","onClickInput","clearTimeout","onPaste","clipboardData","types"],"mappings":"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","sourcesContent":["import {isInRange} from '../lib/utils.js';\nimport {isActiveElement} from '../lib/dom.js';\nimport {addDays, addMonths, addYears, startOfYearPeriod} from '../lib/date.js';\nimport {goToPrevOrNext, switchView, unfocus} from './functions.js';\n\n// Find the closest date that doesn't meet the condition for unavailable date\n// Returns undefined if no available date is found\n// addFn: function to calculate the next date\n//   - args: time value, amount\n// increase: amount to pass to addFn\n// testFn: function to test the unavailablity of the date\n//   - args: time value; retun: true if unavailable\nfunction findNextAvailableOne(date, addFn, increase, testFn, min, max) {\n  if (!isInRange(date, min, max)) {\n    return;\n  }\n  if (testFn(date)) {\n    const newDate = addFn(date, increase);\n    return findNextAvailableOne(newDate, addFn, increase, testFn, min, max);\n  }\n  return date;\n}\n\n// direction: -1 (left/up), 1 (right/down)\n// vertical: true for up/down, false for left/right\nfunction moveByArrowKey(datepicker, ev, direction, vertical) {\n  const picker = datepicker.picker;\n  const currentView = picker.currentView;\n  const step = currentView.step || 1;\n  let viewDate = picker.viewDate;\n  let addFn;\n  let testFn;\n  switch (currentView.id) {\n    case 0:\n      if (vertical) {\n        viewDate = addDays(viewDate, direction * 7);\n      } else if (ev.ctrlKey || ev.metaKey) {\n        viewDate = addYears(viewDate, direction);\n      } else {\n        viewDate = addDays(viewDate, direction);\n      }\n      addFn = addDays;\n      testFn = (date) => currentView.disabled.includes(date);\n      break;\n    case 1:\n      viewDate = addMonths(viewDate, vertical ? direction * 4 : direction);\n      addFn = addMonths;\n      testFn = (date) => {\n        const dt = new Date(date);\n        const {year, disabled} = currentView;\n        return dt.getFullYear() === year && disabled.includes(dt.getMonth());\n      };\n      break;\n    default:\n      viewDate = addYears(viewDate, direction * (vertical ? 4 : 1) * step);\n      addFn = addYears;\n      testFn = date => currentView.disabled.includes(startOfYearPeriod(date, step));\n  }\n  viewDate = findNextAvailableOne(\n    viewDate,\n    addFn,\n    direction < 0 ? -step : step,\n    testFn,\n    currentView.minDate,\n    currentView.maxDate\n  );\n  if (viewDate !== undefined) {\n    picker.changeFocus(viewDate).render();\n  }\n}\n\nexport function onKeydown(datepicker, ev) {\n  const key = ev.key;\n  if (key === 'Tab') {\n    unfocus(datepicker);\n    return;\n  }\n\n  const picker = datepicker.picker;\n  const {id, isMinView} = picker.currentView;\n  if (!picker.active) {\n    if (key === 'ArrowDown') {\n      picker.show();\n    } else {\n      if (key === 'Enter') {\n        datepicker.update();\n      } else if (key === 'Escape') {\n        picker.show();\n      }\n      return;\n    }\n  } else if (datepicker.editMode) {\n    if (key === 'Enter') {\n      datepicker.exitEditMode({update: true, autohide: datepicker.config.autohide});\n    } else if (key === 'Escape') {\n      picker.hide();\n    }\n    return;\n  } else {\n    if (key === 'ArrowLeft') {\n      if (ev.ctrlKey || ev.metaKey) {\n        goToPrevOrNext(datepicker, -1);\n      } else if (ev.shiftKey) {\n        datepicker.enterEditMode();\n        return;\n      } else {\n        moveByArrowKey(datepicker, ev, -1, false);\n      }\n    } else if (key === 'ArrowRight') {\n      if (ev.ctrlKey || ev.metaKey) {\n        goToPrevOrNext(datepicker, 1);\n      } else if (ev.shiftKey) {\n        datepicker.enterEditMode();\n        return;\n      } else {\n        moveByArrowKey(datepicker, ev, 1, false);\n      }\n    } else if (key === 'ArrowUp') {\n      if (ev.ctrlKey || ev.metaKey) {\n        switchView(datepicker);\n      } else if (ev.shiftKey) {\n        datepicker.enterEditMode();\n        return;\n      } else {\n        moveByArrowKey(datepicker, ev, -1, true);\n      }\n    } else if (key === 'ArrowDown') {\n      if (ev.shiftKey && !ev.ctrlKey && !ev.metaKey) {\n        datepicker.enterEditMode();\n        return;\n      }\n      moveByArrowKey(datepicker, ev, 1, true);\n    } else if (key === 'Enter') {\n      if (isMinView) {\n        datepicker.setDate(picker.viewDate);\n        return;\n      }\n      picker.changeView(id - 1).render();\n    } else {\n      if (key === 'Escape') {\n        picker.hide();\n      } else if (\n        key === 'Backspace'\n        || key === 'Delete'\n        || (key.length === 1 && !ev.ctrlKey && !ev.metaKey)\n      ) {\n        datepicker.enterEditMode();\n      }\n      return;\n    }\n  }\n  ev.preventDefault();\n}\n\nexport function onFocus(datepicker) {\n  if (datepicker.config.showOnFocus && !datepicker._showing) {\n    datepicker.show();\n  }\n}\n\n// for the prevention for entering edit mode while getting focus on click\nexport function onMousedown(datepicker, ev) {\n  const el = ev.target;\n  if (datepicker.picker.active || datepicker.config.showOnClick) {\n    el._active = isActiveElement(el);\n    el._clicking = setTimeout(() => {\n      delete el._active;\n      delete el._clicking;\n    }, 2000);\n  }\n}\n\nexport function onClickInput(datepicker, ev) {\n  const el = ev.target;\n  if (!el._clicking) {\n    return;\n  }\n  clearTimeout(el._clicking);\n  delete el._clicking;\n\n  if (el._active) {\n    datepicker.enterEditMode();\n  }\n  delete el._active;\n\n  if (datepicker.config.showOnClick) {\n    datepicker.show();\n  }\n}\n\nexport function onPaste(datepicker, ev) {\n  if (ev.clipboardData.types.includes('text/plain')) {\n    datepicker.enterEditMode();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}