{"ast":null,"code":"import { hasProperty, pushUnique } from '../../lib/utils.js';\nimport { today, dateValue, addDays, addWeeks, dayOfTheWeekOf, getWeek } from '../../lib/date.js';\nimport { formatDate } from '../../lib/date-format.js';\nimport { parseHTML, showElement, hideElement } from '../../lib/dom.js';\nimport daysTemplate from '../templates/daysTemplate.js';\nimport calendarWeeksTemplate from '../templates/calendarWeeksTemplate.js';\nimport View from './View.js';\nexport default class DaysView extends View {\n  constructor(picker) {\n    super(picker, {\n      id: 0,\n      name: 'days',\n      cellClass: 'day'\n    });\n  }\n\n  init(options) {\n    let onConstruction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (onConstruction) {\n      const inner = parseHTML(daysTemplate).firstChild;\n      this.dow = inner.firstChild;\n      this.grid = inner.lastChild;\n      this.element.appendChild(inner);\n    }\n\n    super.init(options);\n  }\n\n  setOptions(options) {\n    let updateDOW;\n\n    if (hasProperty(options, 'minDate')) {\n      this.minDate = options.minDate;\n    }\n\n    if (hasProperty(options, 'maxDate')) {\n      this.maxDate = options.maxDate;\n    }\n\n    if (options.datesDisabled) {\n      this.datesDisabled = options.datesDisabled;\n    }\n\n    if (options.daysOfWeekDisabled) {\n      this.daysOfWeekDisabled = options.daysOfWeekDisabled;\n      updateDOW = true;\n    }\n\n    if (options.daysOfWeekHighlighted) {\n      this.daysOfWeekHighlighted = options.daysOfWeekHighlighted;\n    }\n\n    if (options.todayHighlight !== undefined) {\n      this.todayHighlight = options.todayHighlight;\n    }\n\n    if (options.weekStart !== undefined) {\n      this.weekStart = options.weekStart;\n      this.weekEnd = options.weekEnd;\n      updateDOW = true;\n    }\n\n    if (options.locale) {\n      const locale = this.locale = options.locale;\n      this.dayNames = locale.daysMin;\n      this.switchLabelFormat = locale.titleFormat;\n      updateDOW = true;\n    }\n\n    if (options.beforeShowDay !== undefined) {\n      this.beforeShow = typeof options.beforeShowDay === 'function' ? options.beforeShowDay : undefined;\n    }\n\n    if (options.calendarWeeks !== undefined) {\n      if (options.calendarWeeks && !this.calendarWeeks) {\n        const weeksElem = parseHTML(calendarWeeksTemplate).firstChild;\n        this.calendarWeeks = {\n          element: weeksElem,\n          dow: weeksElem.firstChild,\n          weeks: weeksElem.lastChild\n        };\n        this.element.insertBefore(weeksElem, this.element.firstChild);\n      } else if (this.calendarWeeks && !options.calendarWeeks) {\n        this.element.removeChild(this.calendarWeeks.element);\n        this.calendarWeeks = null;\n      }\n    }\n\n    if (options.showDaysOfWeek !== undefined) {\n      if (options.showDaysOfWeek) {\n        showElement(this.dow);\n\n        if (this.calendarWeeks) {\n          showElement(this.calendarWeeks.dow);\n        }\n      } else {\n        hideElement(this.dow);\n\n        if (this.calendarWeeks) {\n          hideElement(this.calendarWeeks.dow);\n        }\n      }\n    } // update days-of-week when locale, daysOfweekDisabled or weekStart is changed\n\n\n    if (updateDOW) {\n      Array.from(this.dow.children).forEach((el, index) => {\n        const dow = (this.weekStart + index) % 7;\n        el.textContent = this.dayNames[dow];\n        el.className = this.daysOfWeekDisabled.includes(dow) ? 'dow disabled' : 'dow';\n      });\n    }\n  } // Apply update on the focused date to view's settings\n\n\n  updateFocus() {\n    const viewDate = new Date(this.picker.viewDate);\n    const viewYear = viewDate.getFullYear();\n    const viewMonth = viewDate.getMonth();\n    const firstOfMonth = dateValue(viewYear, viewMonth, 1);\n    const start = dayOfTheWeekOf(firstOfMonth, this.weekStart, this.weekStart);\n    this.first = firstOfMonth;\n    this.last = dateValue(viewYear, viewMonth + 1, 0);\n    this.start = start;\n    this.focused = this.picker.viewDate;\n  } // Apply update on the selected dates to view's settings\n\n\n  updateSelection() {\n    const {\n      dates,\n      rangepicker\n    } = this.picker.datepicker;\n    this.selected = dates;\n\n    if (rangepicker) {\n      this.range = rangepicker.dates;\n    }\n  } // Update the entire view UI\n\n\n  render() {\n    // update today marker on ever render\n    this.today = this.todayHighlight ? today() : undefined; // refresh disabled dates on every render in order to clear the ones added\n    // by beforeShow hook at previous render\n\n    this.disabled = [...this.datesDisabled];\n    const switchLabel = formatDate(this.focused, this.switchLabelFormat, this.locale);\n    this.picker.setViewSwitchLabel(switchLabel);\n    this.picker.setPrevBtnDisabled(this.first <= this.minDate);\n    this.picker.setNextBtnDisabled(this.last >= this.maxDate);\n\n    if (this.calendarWeeks) {\n      // start of the UTC week (Monday) of the 1st of the month\n      const startOfWeek = dayOfTheWeekOf(this.first, 1, 1);\n      Array.from(this.calendarWeeks.weeks.children).forEach((el, index) => {\n        el.textContent = getWeek(addWeeks(startOfWeek, index));\n      });\n    }\n\n    Array.from(this.grid.children).forEach((el, index) => {\n      const classList = el.classList;\n      const current = addDays(this.start, index);\n      const date = new Date(current);\n      const day = date.getDay();\n      el.className = `datepicker-cell ${this.cellClass}`;\n      el.dataset.date = current;\n      el.textContent = date.getDate();\n\n      if (current < this.first) {\n        classList.add('prev');\n      } else if (current > this.last) {\n        classList.add('next');\n      }\n\n      if (this.today === current) {\n        classList.add('today');\n      }\n\n      if (current < this.minDate || current > this.maxDate || this.disabled.includes(current)) {\n        classList.add('disabled');\n      }\n\n      if (this.daysOfWeekDisabled.includes(day)) {\n        classList.add('disabled');\n        pushUnique(this.disabled, current);\n      }\n\n      if (this.daysOfWeekHighlighted.includes(day)) {\n        classList.add('highlighted');\n      }\n\n      if (this.range) {\n        const [rangeStart, rangeEnd] = this.range;\n\n        if (current > rangeStart && current < rangeEnd) {\n          classList.add('range');\n        }\n\n        if (current === rangeStart) {\n          classList.add('range-start');\n        }\n\n        if (current === rangeEnd) {\n          classList.add('range-end');\n        }\n      }\n\n      if (this.selected.includes(current)) {\n        classList.add('selected');\n      }\n\n      if (current === this.focused) {\n        classList.add('focused');\n      }\n\n      if (this.beforeShow) {\n        this.performBeforeHook(el, current, current);\n      }\n    });\n  } // Update the view UI by applying the changes of selected and focused items\n\n\n  refresh() {\n    const [rangeStart, rangeEnd] = this.range || [];\n    this.grid.querySelectorAll('.range, .range-start, .range-end, .selected, .focused').forEach(el => {\n      el.classList.remove('range', 'range-start', 'range-end', 'selected', 'focused');\n    });\n    Array.from(this.grid.children).forEach(el => {\n      const current = Number(el.dataset.date);\n      const classList = el.classList;\n\n      if (current > rangeStart && current < rangeEnd) {\n        classList.add('range');\n      }\n\n      if (current === rangeStart) {\n        classList.add('range-start');\n      }\n\n      if (current === rangeEnd) {\n        classList.add('range-end');\n      }\n\n      if (this.selected.includes(current)) {\n        classList.add('selected');\n      }\n\n      if (current === this.focused) {\n        classList.add('focused');\n      }\n    });\n  } // Update the view UI by applying the change of focused item\n\n\n  refreshFocus() {\n    const index = Math.round((this.focused - this.start) / 86400000);\n    this.grid.querySelectorAll('.focused').forEach(el => {\n      el.classList.remove('focused');\n    });\n    this.grid.children[index].classList.add('focused');\n  }\n\n}","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/node_modules/vanillajs-datepicker/js/picker/views/DaysView.js"],"names":["hasProperty","pushUnique","today","dateValue","addDays","addWeeks","dayOfTheWeekOf","getWeek","formatDate","parseHTML","showElement","hideElement","daysTemplate","calendarWeeksTemplate","View","DaysView","constructor","picker","id","name","cellClass","init","options","onConstruction","inner","firstChild","dow","grid","lastChild","element","appendChild","setOptions","updateDOW","minDate","maxDate","datesDisabled","daysOfWeekDisabled","daysOfWeekHighlighted","todayHighlight","undefined","weekStart","weekEnd","locale","dayNames","daysMin","switchLabelFormat","titleFormat","beforeShowDay","beforeShow","calendarWeeks","weeksElem","weeks","insertBefore","removeChild","showDaysOfWeek","Array","from","children","forEach","el","index","textContent","className","includes","updateFocus","viewDate","Date","viewYear","getFullYear","viewMonth","getMonth","firstOfMonth","start","first","last","focused","updateSelection","dates","rangepicker","datepicker","selected","range","render","disabled","switchLabel","setViewSwitchLabel","setPrevBtnDisabled","setNextBtnDisabled","startOfWeek","classList","current","date","day","getDay","dataset","getDate","add","rangeStart","rangeEnd","performBeforeHook","refresh","querySelectorAll","remove","Number","refreshFocus","Math","round"],"mappings":"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","sourcesContent":["import {hasProperty, pushUnique} from '../../lib/utils.js';\nimport {today, dateValue, addDays, addWeeks, dayOfTheWeekOf, getWeek} from '../../lib/date.js';\nimport {formatDate} from '../../lib/date-format.js';\nimport {parseHTML, showElement, hideElement} from '../../lib/dom.js';\nimport daysTemplate from '../templates/daysTemplate.js';\nimport calendarWeeksTemplate from '../templates/calendarWeeksTemplate.js';\nimport View from './View.js';\n\nexport default class DaysView extends View {\n  constructor(picker) {\n    super(picker, {\n      id: 0,\n      name: 'days',\n      cellClass: 'day',\n    });\n  }\n\n  init(options, onConstruction = true) {\n    if (onConstruction) {\n      const inner = parseHTML(daysTemplate).firstChild;\n      this.dow = inner.firstChild;\n      this.grid = inner.lastChild;\n      this.element.appendChild(inner);\n    }\n    super.init(options);\n  }\n\n  setOptions(options) {\n    let updateDOW;\n\n    if (hasProperty(options, 'minDate')) {\n      this.minDate = options.minDate;\n    }\n    if (hasProperty(options, 'maxDate')) {\n      this.maxDate = options.maxDate;\n    }\n    if (options.datesDisabled) {\n      this.datesDisabled = options.datesDisabled;\n    }\n    if (options.daysOfWeekDisabled) {\n      this.daysOfWeekDisabled = options.daysOfWeekDisabled;\n      updateDOW = true;\n    }\n    if (options.daysOfWeekHighlighted) {\n      this.daysOfWeekHighlighted = options.daysOfWeekHighlighted;\n    }\n    if (options.todayHighlight !== undefined) {\n      this.todayHighlight = options.todayHighlight;\n    }\n    if (options.weekStart !== undefined) {\n      this.weekStart = options.weekStart;\n      this.weekEnd = options.weekEnd;\n      updateDOW = true;\n    }\n    if (options.locale) {\n      const locale = this.locale = options.locale;\n      this.dayNames = locale.daysMin;\n      this.switchLabelFormat = locale.titleFormat;\n      updateDOW = true;\n    }\n    if (options.beforeShowDay !== undefined) {\n      this.beforeShow = typeof options.beforeShowDay === 'function'\n        ? options.beforeShowDay\n        : undefined;\n    }\n\n    if (options.calendarWeeks !== undefined) {\n      if (options.calendarWeeks && !this.calendarWeeks) {\n        const weeksElem = parseHTML(calendarWeeksTemplate).firstChild;\n        this.calendarWeeks = {\n          element: weeksElem,\n          dow: weeksElem.firstChild,\n          weeks: weeksElem.lastChild,\n        };\n        this.element.insertBefore(weeksElem, this.element.firstChild);\n      } else if (this.calendarWeeks && !options.calendarWeeks) {\n        this.element.removeChild(this.calendarWeeks.element);\n        this.calendarWeeks = null;\n      }\n    }\n    if (options.showDaysOfWeek !== undefined) {\n      if (options.showDaysOfWeek) {\n        showElement(this.dow);\n        if (this.calendarWeeks) {\n          showElement(this.calendarWeeks.dow);\n        }\n      } else {\n        hideElement(this.dow);\n        if (this.calendarWeeks) {\n          hideElement(this.calendarWeeks.dow);\n        }\n      }\n    }\n\n    // update days-of-week when locale, daysOfweekDisabled or weekStart is changed\n    if (updateDOW) {\n      Array.from(this.dow.children).forEach((el, index) => {\n        const dow = (this.weekStart + index) % 7;\n        el.textContent = this.dayNames[dow];\n        el.className = this.daysOfWeekDisabled.includes(dow) ? 'dow disabled' : 'dow';\n      });\n    }\n  }\n\n  // Apply update on the focused date to view's settings\n  updateFocus() {\n    const viewDate = new Date(this.picker.viewDate);\n    const viewYear = viewDate.getFullYear();\n    const viewMonth = viewDate.getMonth();\n    const firstOfMonth = dateValue(viewYear, viewMonth, 1);\n    const start = dayOfTheWeekOf(firstOfMonth, this.weekStart, this.weekStart);\n\n    this.first = firstOfMonth;\n    this.last = dateValue(viewYear, viewMonth + 1, 0);\n    this.start = start;\n    this.focused = this.picker.viewDate;\n  }\n\n  // Apply update on the selected dates to view's settings\n  updateSelection() {\n    const {dates, rangepicker} = this.picker.datepicker;\n    this.selected = dates;\n    if (rangepicker) {\n      this.range = rangepicker.dates;\n    }\n  }\n\n   // Update the entire view UI\n  render() {\n    // update today marker on ever render\n    this.today = this.todayHighlight ? today() : undefined;\n    // refresh disabled dates on every render in order to clear the ones added\n    // by beforeShow hook at previous render\n    this.disabled = [...this.datesDisabled];\n\n    const switchLabel = formatDate(this.focused, this.switchLabelFormat, this.locale);\n    this.picker.setViewSwitchLabel(switchLabel);\n    this.picker.setPrevBtnDisabled(this.first <= this.minDate);\n    this.picker.setNextBtnDisabled(this.last >= this.maxDate);\n\n    if (this.calendarWeeks) {\n      // start of the UTC week (Monday) of the 1st of the month\n      const startOfWeek = dayOfTheWeekOf(this.first, 1, 1);\n      Array.from(this.calendarWeeks.weeks.children).forEach((el, index) => {\n        el.textContent = getWeek(addWeeks(startOfWeek, index));\n      });\n    }\n    Array.from(this.grid.children).forEach((el, index) => {\n      const classList = el.classList;\n      const current = addDays(this.start, index);\n      const date = new Date(current);\n      const day = date.getDay();\n\n      el.className = `datepicker-cell ${this.cellClass}`;\n      el.dataset.date = current;\n      el.textContent = date.getDate();\n\n      if (current < this.first) {\n        classList.add('prev');\n      } else if (current > this.last) {\n        classList.add('next');\n      }\n      if (this.today === current) {\n        classList.add('today');\n      }\n      if (current < this.minDate || current > this.maxDate || this.disabled.includes(current)) {\n        classList.add('disabled');\n      }\n      if (this.daysOfWeekDisabled.includes(day)) {\n        classList.add('disabled');\n        pushUnique(this.disabled, current);\n      }\n      if (this.daysOfWeekHighlighted.includes(day)) {\n        classList.add('highlighted');\n      }\n      if (this.range) {\n        const [rangeStart, rangeEnd] = this.range;\n        if (current > rangeStart && current < rangeEnd) {\n          classList.add('range');\n        }\n        if (current === rangeStart) {\n          classList.add('range-start');\n        }\n        if (current === rangeEnd) {\n          classList.add('range-end');\n        }\n      }\n      if (this.selected.includes(current)) {\n        classList.add('selected');\n      }\n      if (current === this.focused) {\n        classList.add('focused');\n      }\n\n      if (this.beforeShow) {\n        this.performBeforeHook(el, current, current);\n      }\n    });\n  }\n\n  // Update the view UI by applying the changes of selected and focused items\n  refresh() {\n    const [rangeStart, rangeEnd] = this.range || [];\n    this.grid\n      .querySelectorAll('.range, .range-start, .range-end, .selected, .focused')\n      .forEach((el) => {\n        el.classList.remove('range', 'range-start', 'range-end', 'selected', 'focused');\n      });\n    Array.from(this.grid.children).forEach((el) => {\n      const current = Number(el.dataset.date);\n      const classList = el.classList;\n      if (current > rangeStart && current < rangeEnd) {\n        classList.add('range');\n      }\n      if (current === rangeStart) {\n        classList.add('range-start');\n      }\n      if (current === rangeEnd) {\n        classList.add('range-end');\n      }\n      if (this.selected.includes(current)) {\n        classList.add('selected');\n      }\n      if (current === this.focused) {\n        classList.add('focused');\n      }\n    });\n  }\n\n  // Update the view UI by applying the change of focused item\n  refreshFocus() {\n    const index = Math.round((this.focused - this.start) / 86400000);\n    this.grid.querySelectorAll('.focused').forEach((el) => {\n      el.classList.remove('focused');\n    });\n    this.grid.children[index].classList.add('focused');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}