{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/all-genres.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchMovies = async () => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/genres`);\n\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport default function Genres(_ref) {\n  _s();\n\n  let {\n    genres,\n    handlerChange,\n    deleteTag\n  } = _ref;\n  const [tags, setTags] = useState({\n    allgenres: [],\n    error: null,\n    loading: true\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovies();\n\n      if (!res.genres) {\n        setTags(prev => ({ ...prev,\n          loading: false,\n          error: res\n        }));\n      } else {\n        setTags(prev => ({ ...prev,\n          loading: false,\n          allgenres: res.genres\n        }));\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"level\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: handlerChange,\n              name: \"genres\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"Choose...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), tags.allgenres.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `${g.id}-${g.genre_name}`,\n                children: g.genre_name\n              }, g.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-right\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags\",\n        children: Object.keys(tags.allgenres).map(el => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag\",\n          children: [genres[el], console.log(genres), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete is-small\",\n            onClick: e => deleteTag(e, el)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, el, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Genres, \"zcQNsnbo/NfF18NwzneqKsoEZR0=\");\n\n_c = Genres;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/all-genres.js"],"names":["useState","useEffect","fetchMovies","res","fetch","ok","console","log","Error","statusText","json","error","message","Genres","genres","handlerChange","deleteTag","tags","setTags","allgenres","loading","fetchData","prev","map","g","id","genre_name","Object","keys","el","e"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst fetchMovies = async () => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/genres`);\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\nexport default function Genres({ genres, handlerChange, deleteTag }) {\n  const [tags, setTags] = useState({\n    allgenres: [],\n    error: null,\n    loading: true,\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovies();\n      if (!res.genres) {\n        setTags((prev) => ({ ...prev, loading: false, error: res }));\n      } else {\n        setTags((prev) => ({\n          ...prev,\n          loading: false,\n          allgenres: res.genres,\n        }));\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"level\">\n      <div className=\"level-left\">\n        <div className=\"field\">\n          <label className=\"label\">Genres</label>\n          <div className=\"control\">\n            <div className=\"select\">\n              <select onChange={handlerChange} name=\"genres\">\n                <option value={0}>Choose...</option>\n                {tags.allgenres.map((g) => (\n                  <option key={g.id} value={`${g.id}-${g.genre_name}`}>\n                    {g.genre_name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"level-right\">\n        <div className=\"tags\">\n          {Object.keys(tags.allgenres).map((el) => (\n            <span className=\"tag\" key={el}>\n              {genres[el]}\n              {console.log(genres)}\n              <button\n                className=\"delete is-small\"\n                onClick={(e) => deleteTag(e, el)}\n              ></button>\n            </span>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}