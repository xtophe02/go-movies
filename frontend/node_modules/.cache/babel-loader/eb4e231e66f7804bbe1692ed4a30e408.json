{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/genres.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchAllGenres = async () => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/genres`);\n\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport default function Genres() {\n  _s();\n\n  const [state, setState] = useState({\n    loading: true,\n    genres: [],\n    error: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchAllGenres();\n\n      if (!res.genres) {\n        setState(prev => ({ ...prev,\n          loading: false,\n          error: res\n        }));\n      } else {\n        console.log(res);\n        setState(prev => ({ ...prev,\n          loading: false,\n          genres: res.genres\n        }));\n      }\n    }; // fetchData();\n\n  }, []);\n\n  if (state.loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (state.error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: state.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"hero\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"Choose a category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/genres/comedy\",\n              children: \"Comedy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/genres/drama\",\n              children: \"Drama\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Genres, \"zA0HxoEaZeMhwS9ynr3OFpw8o0E=\");\n\n_c = Genres;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/genres.js"],"names":["Link","useState","useEffect","fetchAllGenres","res","fetch","ok","console","log","Error","statusText","json","error","message","Genres","state","setState","loading","genres","fetchData","prev"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,cAAc,GAAG,YAAY;AACjC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,iCAAF,CAAvB;;AACA,QAAI,CAACD,GAAG,CAACE,EAAT,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,YAAM,IAAIK,KAAJ,CAAUL,GAAG,CAACM,UAAd,CAAN;AACD;;AACD,WAAON,GAAG,CAACO,IAAJ,EAAP;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CAXD;;AAaA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC;AACjCgB,IAAAA,OAAO,EAAE,IADwB;AAEjCC,IAAAA,MAAM,EAAE,EAFyB;AAGjCN,IAAAA,KAAK,EAAE;AAH0B,GAAD,CAAlC;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,SAAS,GAAG,YAAY;AAC5B,YAAMf,GAAG,GAAG,MAAMD,cAAc,EAAhC;;AACA,UAAI,CAACC,GAAG,CAACc,MAAT,EAAiB;AACfF,QAAAA,QAAQ,CAAEI,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWH,UAAAA,OAAO,EAAE,KAApB;AAA2BL,UAAAA,KAAK,EAAER;AAAlC,SAAX,CAAD,CAAR;AACD,OAFD,MAEO;AACLG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAY,QAAAA,QAAQ,CAAEI,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWH,UAAAA,OAAO,EAAE,KAApB;AAA2BC,UAAAA,MAAM,EAAEd,GAAG,CAACc;AAAvC,SAAX,CAAD,CAAR;AACD;AACF,KARD,CADc,CAUd;;AACD,GAXQ,EAWN,EAXM,CAAT;;AAYA,MAAIH,KAAK,CAACE,OAAV,EAAmB;AACjB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIF,KAAK,CAACH,KAAV,EAAiB;AACf,wBAAO;AAAA,gBAAIG,KAAK,CAACH;AAAV;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAA,kCACE;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA1CuBE,M;;KAAAA,M","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst fetchAllGenres = async () => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/genres`);\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport default function Genres() {\n  const [state, setState] = useState({\n    loading: true,\n    genres: [],\n    error: null,\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchAllGenres();\n      if (!res.genres) {\n        setState((prev) => ({ ...prev, loading: false, error: res }));\n      } else {\n        console.log(res);\n        setState((prev) => ({ ...prev, loading: false, genres: res.genres }));\n      }\n    };\n    // fetchData();\n  }, []);\n  if (state.loading) {\n    return <p>loading...</p>;\n  }\n  if (state.error) {\n    return <p>{state.error}</p>;\n  }\n\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <p className=\"title\">Choose a category</p>\n        <div className=\"content\">\n          <ul>\n            <li>\n              <Link to=\"/genres/comedy\">Comedy</Link>\n            </li>\n            <li>\n              <Link to=\"/genres/drama\">Drama</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}