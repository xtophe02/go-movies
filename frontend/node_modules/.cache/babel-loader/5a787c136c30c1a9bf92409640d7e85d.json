{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/movies.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchMovies = async () => {\n  try {\n    const res = await fetch(\"http://localhost:4000/v1/moviess\");\n    return res.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default function Movies() {\n  _s();\n\n  const [state, setState] = useState({\n    loading: true,\n    movies: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovies();\n      setState(prev => ({ ...prev,\n        loading: false,\n        movies: res.movies\n      }));\n    };\n\n    fetchData();\n  }, []);\n\n  if (state.loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"hero\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"Choose a Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: state.movies.map(mv => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/movies/${mv.id}`,\n              children: mv.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)\n          }, mv.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movies, \"VE78nsUpmDLbOWvvsYkX1RdRYb4=\");\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/movies.js"],"names":["useEffect","useState","Link","Outlet","fetchMovies","res","fetch","json","error","console","log","Movies","state","setState","loading","movies","fetchData","prev","map","mv","id","title"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;;;AAEA,MAAMC,WAAW,GAAG,YAAY;AAC9B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAAvB;AACA,WAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPD;;AASA,eAAe,SAASG,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC;AAAEa,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAAD,CAAlC;AACAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,SAAS,GAAG,YAAY;AAC5B,YAAMX,GAAG,GAAG,MAAMD,WAAW,EAA7B;AACAS,MAAAA,QAAQ,CAAEI,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWH,QAAAA,OAAO,EAAE,KAApB;AAA2BC,QAAAA,MAAM,EAAEV,GAAG,CAACU;AAAvC,OAAX,CAAD,CAAR;AACD,KAHD;;AAIAC,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;;AAOA,MAAIJ,KAAK,CAACE,OAAV,EAAmB;AACjB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAA,oBACGF,KAAK,CAACG,MAAN,CAAaG,GAAb,CAAkBC,EAAD,iBAChB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,WAAUA,EAAE,CAACC,EAAG,EAA3B;AAAA,wBAA+BD,EAAE,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF,aAASF,EAAE,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA9BuBT,M;;KAAAA,M","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\n\nconst fetchMovies = async () => {\n  try {\n    const res = await fetch(\"http://localhost:4000/v1/moviess\");\n    return res.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default function Movies() {\n  const [state, setState] = useState({ loading: true, movies: [] });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovies();\n      setState((prev) => ({ ...prev, loading: false, movies: res.movies }));\n    };\n    fetchData();\n  }, []);\n  if (state.loading) {\n    return <p>loading...</p>;\n  }\n\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <p className=\"title\">Choose a Movie</p>\n        <div className=\"content\">\n          <ul>\n            {state.movies.map((mv) => (\n              <li key={mv.id}>\n                <Link to={`/movies/${mv.id}`}>{mv.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <Outlet />\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}