{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/lazy-all-genres.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchMovies = async () => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/genres`);\n\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport default function LazyGenres(_ref) {\n  _s();\n\n  let {\n    moviegenres\n  } = _ref;\n  console.log(moviegenres);\n  const [state, setState] = useState({\n    genres: [],\n    error: null,\n    loading: true,\n    tagGenre: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovies();\n\n      if (!res.genres) {\n        setState(prev => ({ ...prev,\n          loading: false,\n          error: res\n        }));\n      } else {\n        setState(prev => ({ ...prev,\n          loading: false,\n          genres: res.genres\n        }));\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleTag = e => {\n    console.log(e.target);\n    let newArray = state.tagGenre;\n    newArray.push({\n      [e.target.value]: e.target.name\n    });\n    setState(prev => ({ ...prev,\n      tagGenre: newArray\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"level\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"Choose...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), state.genres.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: g.id,\n                onClick: handleTag,\n                children: g.genre_name\n              }, g.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-right\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags\",\n        children: state.tagGenre.map(el => console.log(el))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LazyGenres, \"pLYYkwGFbd7hXPd41az/XgWAnCA=\");\n\n_c = LazyGenres;\n\nvar _c;\n\n$RefreshReg$(_c, \"LazyGenres\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/lazy-all-genres.js"],"names":["useState","useEffect","fetchMovies","res","fetch","ok","console","log","Error","statusText","json","error","message","LazyGenres","moviegenres","state","setState","genres","loading","tagGenre","fetchData","prev","handleTag","e","target","newArray","push","value","name","map","g","id","genre_name","el"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst fetchMovies = async () => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/genres`);\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\nexport default function LazyGenres({ moviegenres }) {\n  console.log(moviegenres);\n  const [state, setState] = useState({\n    genres: [],\n    error: null,\n    loading: true,\n    tagGenre: [],\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovies();\n      if (!res.genres) {\n        setState((prev) => ({ ...prev, loading: false, error: res }));\n      } else {\n        setState((prev) => ({ ...prev, loading: false, genres: res.genres }));\n      }\n    };\n    fetchData();\n  }, []);\n\n  const handleTag = (e) => {\n    console.log(e.target);\n    let newArray = state.tagGenre;\n    newArray.push({ [e.target.value]: e.target.name });\n    setState((prev) => ({ ...prev, tagGenre: newArray }));\n  };\n\n  return (\n    <div className=\"level\">\n      <div className=\"level-left\">\n        <div className=\"field\">\n          <label className=\"label\">Genres</label>\n          <div className=\"control\">\n            <div className=\"select\">\n              <select>\n                <option value={0}>Choose...</option>\n                {state.genres.map((g) => (\n                  <option key={g.id} value={g.id} onClick={handleTag}>\n                    {g.genre_name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"level-right\">\n        <div className=\"tags\">\n          {state.tagGenre.map((el) => console.log(el))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}