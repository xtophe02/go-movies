{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/delete-modal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeleteModal(_ref) {\n  _s();\n\n  let {\n    modal,\n    setModal\n  } = _ref;\n  const navigate = useNavigate();\n\n  const deleteMovie = async () => {\n    const res = await fetch(`${process.env.REACT_APP_URL}/v1/admin/deletemovie/${modal.id}`);\n\n    if (res.ok) {\n      setModal(prev => ({\n        title: \"\",\n        id: \"\",\n        open: !prev.open\n      }));\n      navigate(\"/admin\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${modal.open && \"is-active\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Do you realy want to delete?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"subtitle\",\n        children: modal.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field is-grouped\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => setModal(prev => ({ ...prev,\n              open: !prev.open\n            })),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-danger\",\n            onClick: deleteMovie,\n            children: \"Delete Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modal-close is-large\",\n      \"aria-label\": \"close\",\n      onClick: () => setModal(prev => ({ ...prev,\n        open: !prev.open\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeleteModal, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = DeleteModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/delete-modal.js"],"names":["React","useNavigate","DeleteModal","modal","setModal","navigate","deleteMovie","res","fetch","process","env","REACT_APP_URL","id","ok","prev","title","open"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,eAAe,SAASC,WAAT,OAA0C;AAAA;;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AACvD,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,QAAMK,WAAW,GAAG,YAAY;AAC9B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,GAAEC,OAAO,CAACC,GAAR,CAAYC,aAAc,yBAAwBR,KAAK,CAACS,EAAG,EADzC,CAAvB;;AAGA,QAAIL,GAAG,CAACM,EAAR,EAAY;AACVT,MAAAA,QAAQ,CAAEU,IAAD,KAAW;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaH,QAAAA,EAAE,EAAE,EAAjB;AAAqBI,QAAAA,IAAI,EAAE,CAACF,IAAI,CAACE;AAAjC,OAAX,CAAD,CAAR;AACAX,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;AACF,GARD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAG,SAAQF,KAAK,CAACa,IAAN,IAAc,WAAY,EAAnD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,kBAA0Bb,KAAK,CAACY;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,QADZ;AAEE,YAAA,OAAO,EAAE,MACPX,QAAQ,CAAEU,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWE,cAAAA,IAAI,EAAE,CAACF,IAAI,CAACE;AAAvB,aAAX,CAAD,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,kBAAlB;AAAqC,YAAA,OAAO,EAAEV,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAuBE;AACE,MAAA,SAAS,EAAC,sBADZ;AAEE,oBAAW,OAFb;AAGE,MAAA,OAAO,EAAE,MAAMF,QAAQ,CAAEU,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWE,QAAAA,IAAI,EAAE,CAACF,IAAI,CAACE;AAAvB,OAAX,CAAD;AAHzB;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA1CuBd,W;UACLD,W;;;KADKC,W","sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function DeleteModal({ modal, setModal }) {\n  const navigate = useNavigate();\n  const deleteMovie = async () => {\n    const res = await fetch(\n      `${process.env.REACT_APP_URL}/v1/admin/deletemovie/${modal.id}`\n    );\n    if (res.ok) {\n      setModal((prev) => ({ title: \"\", id: \"\", open: !prev.open }));\n      navigate(\"/admin\");\n    }\n  };\n  return (\n    <div className={`modal ${modal.open && \"is-active\"}`}>\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-content box\">\n        <h3 className=\"title\">Do you realy want to delete?</h3>\n        <h5 className=\"subtitle\">{modal.title}</h5>\n        <div className=\"field is-grouped\">\n          <p className=\"control\">\n            <button\n              className=\"button\"\n              onClick={() =>\n                setModal((prev) => ({ ...prev, open: !prev.open }))\n              }\n            >\n              Cancel\n            </button>\n          </p>\n          <p className=\"control\">\n            <button className=\"button is-danger\" onClick={deleteMovie}>\n              Delete Movie\n            </button>\n          </p>\n        </div>\n      </div>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={() => setModal((prev) => ({ ...prev, open: !prev.open }))}\n      ></button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}