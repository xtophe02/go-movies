{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/movies-graphql.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport SearchBox from \"../components/search-box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst query = `{\n  allMovies {\n    id\n    title\n    year\n    description\n    runtime\n  }\n}`;\nexport default function MoviesGraphql() {\n  _s();\n\n  const [state, setState] = useState({\n    loading: true,\n    movies: [],\n    errors: null,\n    clear: false\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const query = `{\n      allMovies {\n        id\n        title\n        year\n        description\n        runtime\n        poster\n      }\n    }`;\n    fetch(\"http://localhost:4000/v1/graphql\", {\n      signal: signal,\n      method: \"post\",\n      body: query,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(_ref => {\n      let {\n        data\n      } = _ref;\n      // console.log(data);\n      setState({\n        movies: data.allMovies,\n        loading: false,\n        clear: false\n      });\n    }).catch(err => {\n      if (err.name === \"AbortError\") {\n        console.log(\"successfully aborted\");\n      } else {\n        console.log(err); // setError(err);\n      }\n    });\n    return () => controller.abort();\n  }, [state.clear]);\n\n  if (state.loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (state.error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: state.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"hero\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"Choose a Movie GRAPHQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        state: state,\n        setState: setState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table is-striped is-hoverable\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: state.movies.length > 0 ? state.movies.map(mv => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"is-clickable\",\n              onClick: () => navigate(`/movies-graphql/${mv.id}`),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: mv.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 51\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"has-text-grey\",\n                  children: [\"(\", mv.year, \") - \", mv.runtime, \" min\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [mv.description.slice(0, 100), \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), mv.poster != \"\" && /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"is-pull-left\",\n                children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                  className: \"image is-32x32\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://image.tmdb.org/t/p/w200${mv.poster}`,\n                    alt: \"pic movie\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 23\n              }, this)]\n            }, mv.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"has-text-grey\",\n              children: \"no movies on database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MoviesGraphql, \"ZgOJiuJnTEjhS52V8ZJ/XNHdDgY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MoviesGraphql;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesGraphql\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/movies-graphql.js"],"names":["useEffect","useState","Outlet","useNavigate","SearchBox","query","MoviesGraphql","state","setState","loading","movies","errors","clear","navigate","controller","AbortController","signal","fetch","method","body","headers","then","res","json","data","allMovies","catch","err","name","console","log","abort","error","length","map","mv","id","title","year","runtime","description","slice","poster"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport SearchBox from \"../components/search-box\";\n\nconst query = `{\n  allMovies {\n    id\n    title\n    year\n    description\n    runtime\n  }\n}`;\n\nexport default function MoviesGraphql() {\n  const [state, setState] = useState({\n    loading: true,\n    movies: [],\n    errors: null,\n    clear: false,\n  });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const query = `{\n      allMovies {\n        id\n        title\n        year\n        description\n        runtime\n        poster\n      }\n    }`;\n    fetch(\"http://localhost:4000/v1/graphql\", {\n      signal: signal,\n      method: \"post\",\n      body: query,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then(({ data }) => {\n        // console.log(data);\n        setState({ movies: data.allMovies, loading: false, clear: false });\n      })\n      .catch((err) => {\n        if (err.name === \"AbortError\") {\n          console.log(\"successfully aborted\");\n        } else {\n          console.log(err);\n          // setError(err);\n        }\n      });\n    return () => controller.abort();\n  }, [state.clear]);\n  if (state.loading) {\n    return <p>loading...</p>;\n  }\n  if (state.error) {\n    return <p>{state.error}</p>;\n  }\n\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <p className=\"title\">Choose a Movie GRAPHQL</p>\n        <SearchBox state={state} setState={setState} />\n        <div className=\"content\">\n          <table className=\"table is-striped is-hoverable\">\n            <tbody>\n              {state.movies.length > 0 ? (\n                state.movies.map((mv) => (\n                  <tr\n                    key={mv.id}\n                    className=\"is-clickable\"\n                    onClick={() => navigate(`/movies-graphql/${mv.id}`)}\n                  >\n                    <td>\n                      <strong>{mv.title}</strong> <br />\n                      <small className=\"has-text-grey\">\n                        ({mv.year}) - {mv.runtime} min\n                      </small>\n                      <br />\n                      <small>{mv.description.slice(0, 100)}...</small>\n                    </td>\n                    {mv.poster != \"\" && (\n                      <td className=\"is-pull-left\">\n                        <figure className=\"image is-32x32\">\n                          <img\n                            src={`https://image.tmdb.org/t/p/w200${mv.poster}`}\n                            alt=\"pic movie\"\n                          />\n                        </figure>\n                      </td>\n                    )}\n                  </tr>\n                ))\n              ) : (\n                <p className=\"has-text-grey\">no movies on database</p>\n              )}\n            </tbody>\n          </table>\n        </div>\n        <Outlet />\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}