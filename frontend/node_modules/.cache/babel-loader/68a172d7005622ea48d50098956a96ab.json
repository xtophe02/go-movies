{"ast":null,"code":"import { hasProperty, lastItemOf, isInRange, limitToRange } from '../lib/utils.js';\nimport { today } from '../lib/date.js';\nimport { parseHTML, getParent, showElement, hideElement, emptyChildNodes } from '../lib/dom.js';\nimport { registerListeners } from '../lib/event.js';\nimport pickerTemplate from './templates/pickerTemplate.js';\nimport DaysView from './views/DaysView.js';\nimport MonthsView from './views/MonthsView.js';\nimport YearsView from './views/YearsView.js';\nimport { triggerDatepickerEvent } from '../events/functions.js';\nimport { onClickTodayBtn, onClickClearBtn, onClickViewSwitch, onClickPrevBtn, onClickNextBtn, onClickView, onMousedownPicker } from '../events/pickerListeners.js';\nconst orientClasses = ['left', 'top', 'right', 'bottom'].reduce((obj, key) => {\n  obj[key] = `datepicker-orient-${key}`;\n  return obj;\n}, {});\n\nconst toPx = num => num ? `${num}px` : num;\n\nfunction processPickerOptions(picker, options) {\n  if (options.title !== undefined) {\n    if (options.title) {\n      picker.controls.title.textContent = options.title;\n      showElement(picker.controls.title);\n    } else {\n      picker.controls.title.textContent = '';\n      hideElement(picker.controls.title);\n    }\n  }\n\n  if (options.prevArrow) {\n    const prevBtn = picker.controls.prevBtn;\n    emptyChildNodes(prevBtn);\n    options.prevArrow.forEach(node => {\n      prevBtn.appendChild(node.cloneNode(true));\n    });\n  }\n\n  if (options.nextArrow) {\n    const nextBtn = picker.controls.nextBtn;\n    emptyChildNodes(nextBtn);\n    options.nextArrow.forEach(node => {\n      nextBtn.appendChild(node.cloneNode(true));\n    });\n  }\n\n  if (options.locale) {\n    picker.controls.todayBtn.textContent = options.locale.today;\n    picker.controls.clearBtn.textContent = options.locale.clear;\n  }\n\n  if (options.todayBtn !== undefined) {\n    if (options.todayBtn) {\n      showElement(picker.controls.todayBtn);\n    } else {\n      hideElement(picker.controls.todayBtn);\n    }\n  }\n\n  if (hasProperty(options, 'minDate') || hasProperty(options, 'maxDate')) {\n    const {\n      minDate,\n      maxDate\n    } = picker.datepicker.config;\n    picker.controls.todayBtn.disabled = !isInRange(today(), minDate, maxDate);\n  }\n\n  if (options.clearBtn !== undefined) {\n    if (options.clearBtn) {\n      showElement(picker.controls.clearBtn);\n    } else {\n      hideElement(picker.controls.clearBtn);\n    }\n  }\n} // Compute view date to reset, which will be...\n// - the last item of the selected dates or defaultViewDate if no selection\n// - limitted to minDate or maxDate if it exceeds the range\n\n\nfunction computeResetViewDate(datepicker) {\n  const {\n    dates,\n    config\n  } = datepicker;\n  const viewDate = dates.length > 0 ? lastItemOf(dates) : config.defaultViewDate;\n  return limitToRange(viewDate, config.minDate, config.maxDate);\n} // Change current view's view date\n\n\nfunction setViewDate(picker, newDate) {\n  const oldViewDate = new Date(picker.viewDate);\n  const newViewDate = new Date(newDate);\n  const {\n    id,\n    year,\n    first,\n    last\n  } = picker.currentView;\n  const viewYear = newViewDate.getFullYear();\n  picker.viewDate = newDate;\n\n  if (viewYear !== oldViewDate.getFullYear()) {\n    triggerDatepickerEvent(picker.datepicker, 'changeYear');\n  }\n\n  if (newViewDate.getMonth() !== oldViewDate.getMonth()) {\n    triggerDatepickerEvent(picker.datepicker, 'changeMonth');\n  } // return whether the new date is in different period on time from the one\n  // displayed in the current view\n  // when true, the view needs to be re-rendered on the next UI refresh.\n\n\n  switch (id) {\n    case 0:\n      return newDate < first || newDate > last;\n\n    case 1:\n      return viewYear !== year;\n\n    default:\n      return viewYear < first || viewYear > last;\n  }\n}\n\nfunction getTextDirection(el) {\n  return window.getComputedStyle(el).direction;\n} // find the closet scrollable ancestor elemnt under the body\n\n\nfunction findScrollParents(el) {\n  const parent = getParent(el);\n\n  if (parent === document.body || !parent) {\n    return;\n  } // checking overflow only is enough because computed overflow cannot be\n  // visible or a combination of visible and other when either axis is set\n  // to other than visible.\n  // (Setting one axis to other than 'visible' while the other is 'visible'\n  // results in the other axis turning to 'auto')\n\n\n  return window.getComputedStyle(parent).overflow !== 'visible' ? parent : findScrollParents(parent);\n} // Class representing the picker UI\n\n\nexport default class Picker {\n  constructor(datepicker) {\n    const {\n      config\n    } = this.datepicker = datepicker;\n    const template = pickerTemplate.replace(/%buttonClass%/g, config.buttonClass);\n    const element = this.element = parseHTML(template).firstChild;\n    const [header, main, footer] = element.firstChild.children;\n    const title = header.firstElementChild;\n    const [prevBtn, viewSwitch, nextBtn] = header.lastElementChild.children;\n    const [todayBtn, clearBtn] = footer.firstChild.children;\n    const controls = {\n      title,\n      prevBtn,\n      viewSwitch,\n      nextBtn,\n      todayBtn,\n      clearBtn\n    };\n    this.main = main;\n    this.controls = controls;\n    const elementClass = datepicker.inline ? 'inline' : 'dropdown';\n    element.classList.add(`datepicker-${elementClass}`);\n    processPickerOptions(this, config);\n    this.viewDate = computeResetViewDate(datepicker); // set up event listeners\n\n    registerListeners(datepicker, [[element, 'mousedown', onMousedownPicker], [main, 'click', onClickView.bind(null, datepicker)], [controls.viewSwitch, 'click', onClickViewSwitch.bind(null, datepicker)], [controls.prevBtn, 'click', onClickPrevBtn.bind(null, datepicker)], [controls.nextBtn, 'click', onClickNextBtn.bind(null, datepicker)], [controls.todayBtn, 'click', onClickTodayBtn.bind(null, datepicker)], [controls.clearBtn, 'click', onClickClearBtn.bind(null, datepicker)]]); // set up views\n\n    this.views = [new DaysView(this), new MonthsView(this), new YearsView(this, {\n      id: 2,\n      name: 'years',\n      cellClass: 'year',\n      step: 1\n    }), new YearsView(this, {\n      id: 3,\n      name: 'decades',\n      cellClass: 'decade',\n      step: 10\n    })];\n    this.currentView = this.views[config.startView];\n    this.currentView.render();\n    this.main.appendChild(this.currentView.element);\n\n    if (config.container) {\n      config.container.appendChild(this.element);\n    } else {\n      datepicker.inputField.after(this.element);\n    }\n  }\n\n  setOptions(options) {\n    processPickerOptions(this, options);\n    this.views.forEach(view => {\n      view.init(options, false);\n    });\n    this.currentView.render();\n  }\n\n  detach() {\n    this.element.remove();\n  }\n\n  show() {\n    if (this.active) {\n      return;\n    }\n\n    const {\n      datepicker,\n      element\n    } = this;\n\n    if (datepicker.inline) {\n      element.classList.add('active');\n    } else {\n      // ensure picker's direction matches input's\n      const inputDirection = getTextDirection(datepicker.inputField);\n\n      if (inputDirection !== getTextDirection(getParent(element))) {\n        element.dir = inputDirection;\n      } else if (element.dir) {\n        element.removeAttribute('dir');\n      }\n\n      element.style.visiblity = 'hidden';\n      element.classList.add('active');\n      this.place();\n      element.style.visiblity = '';\n\n      if (datepicker.config.disableTouchKeyboard) {\n        datepicker.inputField.blur();\n      }\n    }\n\n    this.active = true;\n    triggerDatepickerEvent(datepicker, 'show');\n  }\n\n  hide() {\n    if (!this.active) {\n      return;\n    }\n\n    this.datepicker.exitEditMode();\n    this.element.classList.remove('active');\n    this.active = false;\n    triggerDatepickerEvent(this.datepicker, 'hide');\n  }\n\n  place() {\n    const {\n      classList,\n      offsetParent,\n      style\n    } = this.element;\n    const {\n      config,\n      inputField\n    } = this.datepicker;\n    const {\n      width: calendarWidth,\n      height: calendarHeight\n    } = this.element.getBoundingClientRect();\n    const {\n      left: inputLeft,\n      top: inputTop,\n      right: inputRight,\n      bottom: inputBottom,\n      width: inputWidth,\n      height: inputHeight\n    } = inputField.getBoundingClientRect();\n    let {\n      x: orientX,\n      y: orientY\n    } = config.orientation;\n    let left = inputLeft;\n    let top = inputTop; // caliculate offsetLeft/Top of inputField\n\n    if (offsetParent === document.body || !offsetParent) {\n      left += window.scrollX;\n      top += window.scrollY;\n    } else {\n      const offsetParentRect = offsetParent.getBoundingClientRect();\n      left -= offsetParentRect.left - offsetParent.scrollLeft;\n      top -= offsetParentRect.top - offsetParent.scrollTop;\n    } // caliculate the boundaries of the visible area that contains inputField\n\n\n    const scrollParent = findScrollParents(inputField);\n    let scrollAreaLeft = 0;\n    let scrollAreaTop = 0;\n    let {\n      clientWidth: scrollAreaRight,\n      clientHeight: scrollAreaBottom\n    } = document.documentElement;\n\n    if (scrollParent) {\n      const scrollParentRect = scrollParent.getBoundingClientRect();\n\n      if (scrollParentRect.top > 0) {\n        scrollAreaTop = scrollParentRect.top;\n      }\n\n      if (scrollParentRect.left > 0) {\n        scrollAreaLeft = scrollParentRect.left;\n      }\n\n      if (scrollParentRect.right < scrollAreaRight) {\n        scrollAreaRight = scrollParentRect.right;\n      }\n\n      if (scrollParentRect.bottom < scrollAreaBottom) {\n        scrollAreaBottom = scrollParentRect.bottom;\n      }\n    } // determine the horizontal orientation and left position\n\n\n    let adjustment = 0;\n\n    if (orientX === 'auto') {\n      if (inputLeft < scrollAreaLeft) {\n        orientX = 'left';\n        adjustment = scrollAreaLeft - inputLeft;\n      } else if (inputLeft + calendarWidth > scrollAreaRight) {\n        orientX = 'right';\n\n        if (scrollAreaRight < inputRight) {\n          adjustment = scrollAreaRight - inputRight;\n        }\n      } else if (getTextDirection(inputField) === 'rtl') {\n        orientX = inputRight - calendarWidth < scrollAreaLeft ? 'left' : 'right';\n      } else {\n        orientX = 'left';\n      }\n    }\n\n    if (orientX === 'right') {\n      left += inputWidth - calendarWidth;\n    }\n\n    left += adjustment; // determine the vertical orientation and top position\n\n    if (orientY === 'auto') {\n      if (inputTop - calendarHeight > scrollAreaTop) {\n        orientY = inputBottom + calendarHeight > scrollAreaBottom ? 'top' : 'bottom';\n      } else {\n        orientY = 'bottom';\n      }\n    }\n\n    if (orientY === 'top') {\n      top -= calendarHeight;\n    } else {\n      top += inputHeight;\n    }\n\n    classList.remove(...Object.values(orientClasses));\n    classList.add(orientClasses[orientX], orientClasses[orientY]);\n    style.left = toPx(left);\n    style.top = toPx(top);\n  }\n\n  setViewSwitchLabel(labelText) {\n    this.controls.viewSwitch.textContent = labelText;\n  }\n\n  setPrevBtnDisabled(disabled) {\n    this.controls.prevBtn.disabled = disabled;\n  }\n\n  setNextBtnDisabled(disabled) {\n    this.controls.nextBtn.disabled = disabled;\n  }\n\n  changeView(viewId) {\n    const oldView = this.currentView;\n    const newView = this.views[viewId];\n\n    if (newView.id !== oldView.id) {\n      this.currentView = newView;\n      this._renderMethod = 'render';\n      triggerDatepickerEvent(this.datepicker, 'changeView');\n      this.main.replaceChild(newView.element, oldView.element);\n    }\n\n    return this;\n  } // Change the focused date (view date)\n\n\n  changeFocus(newViewDate) {\n    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refreshFocus';\n    this.views.forEach(view => {\n      view.updateFocus();\n    });\n    return this;\n  } // Apply the change of the selected dates\n\n\n  update() {\n    const newViewDate = computeResetViewDate(this.datepicker);\n    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refresh';\n    this.views.forEach(view => {\n      view.updateFocus();\n      view.updateSelection();\n    });\n    return this;\n  } // Refresh the picker UI\n\n\n  render() {\n    let quickRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    const renderMethod = quickRender && this._renderMethod || 'render';\n    delete this._renderMethod;\n    this.currentView[renderMethod]();\n  }\n\n}","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/node_modules/vanillajs-datepicker/js/picker/Picker.js"],"names":["hasProperty","lastItemOf","isInRange","limitToRange","today","parseHTML","getParent","showElement","hideElement","emptyChildNodes","registerListeners","pickerTemplate","DaysView","MonthsView","YearsView","triggerDatepickerEvent","onClickTodayBtn","onClickClearBtn","onClickViewSwitch","onClickPrevBtn","onClickNextBtn","onClickView","onMousedownPicker","orientClasses","reduce","obj","key","toPx","num","processPickerOptions","picker","options","title","undefined","controls","textContent","prevArrow","prevBtn","forEach","node","appendChild","cloneNode","nextArrow","nextBtn","locale","todayBtn","clearBtn","clear","minDate","maxDate","datepicker","config","disabled","computeResetViewDate","dates","viewDate","length","defaultViewDate","setViewDate","newDate","oldViewDate","Date","newViewDate","id","year","first","last","currentView","viewYear","getFullYear","getMonth","getTextDirection","el","window","getComputedStyle","direction","findScrollParents","parent","document","body","overflow","Picker","constructor","template","replace","buttonClass","element","firstChild","header","main","footer","children","firstElementChild","viewSwitch","lastElementChild","elementClass","inline","classList","add","bind","views","name","cellClass","step","startView","render","container","inputField","after","setOptions","view","init","detach","remove","show","active","inputDirection","dir","removeAttribute","style","visiblity","place","disableTouchKeyboard","blur","hide","exitEditMode","offsetParent","width","calendarWidth","height","calendarHeight","getBoundingClientRect","left","inputLeft","top","inputTop","right","inputRight","bottom","inputBottom","inputWidth","inputHeight","x","orientX","y","orientY","orientation","scrollX","scrollY","offsetParentRect","scrollLeft","scrollTop","scrollParent","scrollAreaLeft","scrollAreaTop","clientWidth","scrollAreaRight","clientHeight","scrollAreaBottom","documentElement","scrollParentRect","adjustment","Object","values","setViewSwitchLabel","labelText","setPrevBtnDisabled","setNextBtnDisabled","changeView","viewId","oldView","newView","_renderMethod","replaceChild","changeFocus","updateFocus","update","updateSelection","quickRender","renderMethod"],"mappings":"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","sourcesContent":["import {hasProperty, lastItemOf, isInRange, limitToRange} from '../lib/utils.js';\nimport {today} from '../lib/date.js';\nimport {parseHTML, getParent, showElement, hideElement, emptyChildNodes} from '../lib/dom.js';\nimport {registerListeners} from '../lib/event.js';\nimport pickerTemplate from './templates/pickerTemplate.js';\nimport DaysView from './views/DaysView.js';\nimport MonthsView from './views/MonthsView.js';\nimport YearsView from './views/YearsView.js';\nimport {triggerDatepickerEvent} from '../events/functions.js';\nimport {\n  onClickTodayBtn,\n  onClickClearBtn,\n  onClickViewSwitch,\n  onClickPrevBtn,\n  onClickNextBtn,\n  onClickView,\n  onMousedownPicker,\n} from '../events/pickerListeners.js';\n\nconst orientClasses = ['left', 'top', 'right', 'bottom'].reduce((obj, key) => {\n  obj[key] = `datepicker-orient-${key}`;\n  return obj;\n}, {});\nconst toPx = num => num ? `${num}px` : num;\n\nfunction processPickerOptions(picker, options) {\n  if (options.title !== undefined) {\n    if (options.title) {\n      picker.controls.title.textContent = options.title;\n      showElement(picker.controls.title);\n    } else {\n      picker.controls.title.textContent = '';\n      hideElement(picker.controls.title);\n    }\n  }\n  if (options.prevArrow) {\n    const prevBtn = picker.controls.prevBtn;\n    emptyChildNodes(prevBtn);\n    options.prevArrow.forEach((node) => {\n      prevBtn.appendChild(node.cloneNode(true));\n    });\n  }\n  if (options.nextArrow) {\n    const nextBtn = picker.controls.nextBtn;\n    emptyChildNodes(nextBtn);\n    options.nextArrow.forEach((node) => {\n      nextBtn.appendChild(node.cloneNode(true));\n    });\n  }\n  if (options.locale) {\n    picker.controls.todayBtn.textContent = options.locale.today;\n    picker.controls.clearBtn.textContent = options.locale.clear;\n  }\n  if (options.todayBtn !== undefined) {\n    if (options.todayBtn) {\n      showElement(picker.controls.todayBtn);\n    } else {\n      hideElement(picker.controls.todayBtn);\n    }\n  }\n  if (hasProperty(options, 'minDate') || hasProperty(options, 'maxDate')) {\n    const {minDate, maxDate} = picker.datepicker.config;\n    picker.controls.todayBtn.disabled = !isInRange(today(), minDate, maxDate);\n  }\n  if (options.clearBtn !== undefined) {\n    if (options.clearBtn) {\n      showElement(picker.controls.clearBtn);\n    } else {\n      hideElement(picker.controls.clearBtn);\n    }\n  }\n}\n\n// Compute view date to reset, which will be...\n// - the last item of the selected dates or defaultViewDate if no selection\n// - limitted to minDate or maxDate if it exceeds the range\nfunction computeResetViewDate(datepicker) {\n  const {dates, config} = datepicker;\n  const viewDate = dates.length > 0 ? lastItemOf(dates) : config.defaultViewDate;\n  return limitToRange(viewDate, config.minDate, config.maxDate);\n}\n\n// Change current view's view date\nfunction setViewDate(picker, newDate) {\n  const oldViewDate = new Date(picker.viewDate);\n  const newViewDate = new Date(newDate);\n  const {id, year, first, last} = picker.currentView;\n  const viewYear = newViewDate.getFullYear();\n\n  picker.viewDate = newDate;\n  if (viewYear !== oldViewDate.getFullYear()) {\n    triggerDatepickerEvent(picker.datepicker, 'changeYear');\n  }\n  if (newViewDate.getMonth() !== oldViewDate.getMonth()) {\n    triggerDatepickerEvent(picker.datepicker, 'changeMonth');\n  }\n\n  // return whether the new date is in different period on time from the one\n  // displayed in the current view\n  // when true, the view needs to be re-rendered on the next UI refresh.\n  switch (id) {\n    case 0:\n      return newDate < first || newDate > last;\n    case 1:\n      return viewYear !== year;\n    default:\n      return viewYear < first || viewYear > last;\n  }\n}\n\nfunction getTextDirection(el) {\n  return window.getComputedStyle(el).direction;\n}\n\n// find the closet scrollable ancestor elemnt under the body\nfunction findScrollParents(el) {\n  const parent = getParent(el);\n  if (parent === document.body || !parent) {\n    return;\n  }\n\n  // checking overflow only is enough because computed overflow cannot be\n  // visible or a combination of visible and other when either axis is set\n  // to other than visible.\n  // (Setting one axis to other than 'visible' while the other is 'visible'\n  // results in the other axis turning to 'auto')\n  return window.getComputedStyle(parent).overflow !== 'visible'\n    ? parent\n    : findScrollParents(parent);\n}\n\n// Class representing the picker UI\nexport default class Picker {\n  constructor(datepicker) {\n    const {config} = this.datepicker = datepicker;\n\n    const template = pickerTemplate.replace(/%buttonClass%/g, config.buttonClass);\n    const element = this.element = parseHTML(template).firstChild;\n    const [header, main, footer] = element.firstChild.children;\n    const title = header.firstElementChild;\n    const [prevBtn, viewSwitch, nextBtn] = header.lastElementChild.children;\n    const [todayBtn, clearBtn] = footer.firstChild.children;\n    const controls = {\n      title,\n      prevBtn,\n      viewSwitch,\n      nextBtn,\n      todayBtn,\n      clearBtn,\n    };\n    this.main = main;\n    this.controls = controls;\n\n    const elementClass = datepicker.inline ? 'inline' : 'dropdown';\n    element.classList.add(`datepicker-${elementClass}`);\n\n    processPickerOptions(this, config);\n    this.viewDate = computeResetViewDate(datepicker);\n\n    // set up event listeners\n    registerListeners(datepicker, [\n      [element, 'mousedown', onMousedownPicker],\n      [main, 'click', onClickView.bind(null, datepicker)],\n      [controls.viewSwitch, 'click', onClickViewSwitch.bind(null, datepicker)],\n      [controls.prevBtn, 'click', onClickPrevBtn.bind(null, datepicker)],\n      [controls.nextBtn, 'click', onClickNextBtn.bind(null, datepicker)],\n      [controls.todayBtn, 'click', onClickTodayBtn.bind(null, datepicker)],\n      [controls.clearBtn, 'click', onClickClearBtn.bind(null, datepicker)],\n    ]);\n\n    // set up views\n    this.views = [\n      new DaysView(this),\n      new MonthsView(this),\n      new YearsView(this, {id: 2, name: 'years', cellClass: 'year', step: 1}),\n      new YearsView(this, {id: 3, name: 'decades', cellClass: 'decade', step: 10}),\n    ];\n    this.currentView = this.views[config.startView];\n\n    this.currentView.render();\n    this.main.appendChild(this.currentView.element);\n    if (config.container) {\n      config.container.appendChild(this.element);\n    } else {\n      datepicker.inputField.after(this.element);\n    }\n  }\n\n  setOptions(options) {\n    processPickerOptions(this, options);\n    this.views.forEach((view) => {\n      view.init(options, false);\n    });\n    this.currentView.render();\n  }\n\n  detach() {\n    this.element.remove();\n  }\n\n  show() {\n    if (this.active) {\n      return;\n    }\n\n    const {datepicker, element} = this;\n    if (datepicker.inline) {\n      element.classList.add('active');\n    } else {\n      // ensure picker's direction matches input's\n      const inputDirection = getTextDirection(datepicker.inputField);\n      if (inputDirection !== getTextDirection(getParent(element))) {\n        element.dir = inputDirection;\n      } else if (element.dir) {\n        element.removeAttribute('dir');\n      }\n\n      element.style.visiblity = 'hidden';\n      element.classList.add('active');\n      this.place();\n      element.style.visiblity = '';\n\n      if (datepicker.config.disableTouchKeyboard) {\n        datepicker.inputField.blur();\n      }\n    }\n    this.active = true;\n    triggerDatepickerEvent(datepicker, 'show');\n  }\n\n  hide() {\n    if (!this.active) {\n      return;\n    }\n    this.datepicker.exitEditMode();\n    this.element.classList.remove('active');\n    this.active = false;\n    triggerDatepickerEvent(this.datepicker, 'hide');\n  }\n\n  place() {\n    const {classList, offsetParent, style} = this.element;\n    const {config, inputField} = this.datepicker;\n    const {\n      width: calendarWidth,\n      height: calendarHeight,\n    } = this.element.getBoundingClientRect();\n    const {\n      left: inputLeft,\n      top: inputTop,\n      right: inputRight,\n      bottom: inputBottom,\n      width: inputWidth,\n      height: inputHeight\n    } = inputField.getBoundingClientRect();\n    let {x: orientX, y: orientY} = config.orientation;\n    let left = inputLeft;\n    let top = inputTop;\n\n    // caliculate offsetLeft/Top of inputField\n    if (offsetParent === document.body || !offsetParent) {\n      left += window.scrollX;\n      top += window.scrollY;\n    } else {\n      const offsetParentRect = offsetParent.getBoundingClientRect();\n      left -= offsetParentRect.left - offsetParent.scrollLeft;\n      top -= offsetParentRect.top - offsetParent.scrollTop;\n    }\n\n    // caliculate the boundaries of the visible area that contains inputField\n    const scrollParent = findScrollParents(inputField);\n    let scrollAreaLeft = 0;\n    let scrollAreaTop = 0;\n    let {\n      clientWidth: scrollAreaRight,\n      clientHeight: scrollAreaBottom,\n    } = document.documentElement;\n\n    if (scrollParent) {\n      const scrollParentRect = scrollParent.getBoundingClientRect();\n      if (scrollParentRect.top > 0) {\n        scrollAreaTop = scrollParentRect.top;\n      }\n      if (scrollParentRect.left > 0) {\n        scrollAreaLeft = scrollParentRect.left;\n      }\n      if (scrollParentRect.right < scrollAreaRight) {\n        scrollAreaRight = scrollParentRect.right;\n      }\n      if (scrollParentRect.bottom < scrollAreaBottom) {\n        scrollAreaBottom = scrollParentRect.bottom;\n      }\n    }\n\n    // determine the horizontal orientation and left position\n    let adjustment = 0;\n    if (orientX === 'auto') {\n      if (inputLeft < scrollAreaLeft) {\n        orientX = 'left';\n        adjustment = scrollAreaLeft - inputLeft;\n      } else if (inputLeft + calendarWidth > scrollAreaRight) {\n        orientX = 'right';\n        if (scrollAreaRight < inputRight) {\n          adjustment = scrollAreaRight - inputRight;\n        }\n      } else if (getTextDirection(inputField) === 'rtl') {\n        orientX = inputRight - calendarWidth < scrollAreaLeft ? 'left' : 'right';\n      } else {\n        orientX = 'left';\n      }\n    }\n    if (orientX === 'right') {\n      left += inputWidth - calendarWidth;\n    }\n    left += adjustment;\n\n    // determine the vertical orientation and top position\n    if (orientY === 'auto') {\n      if (inputTop - calendarHeight > scrollAreaTop) {\n        orientY = inputBottom + calendarHeight > scrollAreaBottom ? 'top' : 'bottom';\n      } else {\n        orientY = 'bottom';\n      }\n    }\n    if (orientY === 'top') {\n      top -= calendarHeight;\n    } else {\n      top += inputHeight;\n    }\n\n    classList.remove(...Object.values(orientClasses));\n    classList.add(orientClasses[orientX], orientClasses[orientY]);\n\n    style.left = toPx(left);\n    style.top = toPx(top);\n  }\n\n  setViewSwitchLabel(labelText) {\n    this.controls.viewSwitch.textContent = labelText;\n  }\n\n  setPrevBtnDisabled(disabled) {\n    this.controls.prevBtn.disabled = disabled;\n  }\n\n  setNextBtnDisabled(disabled) {\n    this.controls.nextBtn.disabled = disabled;\n  }\n\n  changeView(viewId) {\n    const oldView = this.currentView;\n    const newView =  this.views[viewId];\n    if (newView.id !== oldView.id) {\n      this.currentView = newView;\n      this._renderMethod = 'render';\n      triggerDatepickerEvent(this.datepicker, 'changeView');\n      this.main.replaceChild(newView.element, oldView.element);\n    }\n    return this;\n  }\n\n  // Change the focused date (view date)\n  changeFocus(newViewDate) {\n    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refreshFocus';\n    this.views.forEach((view) => {\n      view.updateFocus();\n    });\n    return this;\n  }\n\n  // Apply the change of the selected dates\n  update() {\n    const newViewDate = computeResetViewDate(this.datepicker);\n    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refresh';\n    this.views.forEach((view) => {\n      view.updateFocus();\n      view.updateSelection();\n    });\n    return this;\n  }\n\n  // Refresh the picker UI\n  render(quickRender = true) {\n    const renderMethod = (quickRender && this._renderMethod) || 'render';\n    delete this._renderMethod;\n\n    this.currentView[renderMethod]();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}