{"ast":null,"code":"const listenerRegistry = new WeakMap();\nconst {\n  addEventListener,\n  removeEventListener\n} = EventTarget.prototype; // Register event listeners to a key object\n// listeners: array of listener definitions;\n//   - each definition must be a flat array of event target and the arguments\n//     used to call addEventListener() on the target\n\nexport function registerListeners(keyObj, listeners) {\n  let registered = listenerRegistry.get(keyObj);\n\n  if (!registered) {\n    registered = [];\n    listenerRegistry.set(keyObj, registered);\n  }\n\n  listeners.forEach(listener => {\n    addEventListener.call(...listener);\n    registered.push(listener);\n  });\n}\nexport function unregisterListeners(keyObj) {\n  let listeners = listenerRegistry.get(keyObj);\n\n  if (!listeners) {\n    return;\n  }\n\n  listeners.forEach(listener => {\n    removeEventListener.call(...listener);\n  });\n  listenerRegistry.delete(keyObj);\n} // Event.composedPath() polyfill for Edge\n// based on https://gist.github.com/kleinfreund/e9787d73776c0e3750dcfcdc89f100ec\n\nif (!Event.prototype.composedPath) {\n  const getComposedPath = function (node) {\n    let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    path.push(node);\n    let parent;\n\n    if (node.parentNode) {\n      parent = node.parentNode;\n    } else if (node.host) {\n      // ShadowRoot\n      parent = node.host;\n    } else if (node.defaultView) {\n      // Document\n      parent = node.defaultView;\n    }\n\n    return parent ? getComposedPath(parent, path) : path;\n  };\n\n  Event.prototype.composedPath = function () {\n    return getComposedPath(this.target);\n  };\n}\n\nfunction findFromPath(path, criteria, currentTarget) {\n  const [node, ...rest] = path;\n\n  if (criteria(node)) {\n    return node;\n  }\n\n  if (node === currentTarget || node.tagName === 'HTML' || rest.length === 0) {\n    // stop when reaching currentTarget or <html>\n    return;\n  }\n\n  return findFromPath(rest, criteria, currentTarget);\n} // Search for the actual target of a delegated event\n\n\nexport function findElementInEventPath(ev, selector) {\n  const criteria = typeof selector === 'function' ? selector : el => el instanceof Element && el.matches(selector);\n  return findFromPath(ev.composedPath(), criteria, ev.currentTarget);\n}","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/node_modules/vanillajs-datepicker/js/lib/event.js"],"names":["listenerRegistry","WeakMap","addEventListener","removeEventListener","EventTarget","prototype","registerListeners","keyObj","listeners","registered","get","set","forEach","listener","call","push","unregisterListeners","delete","Event","composedPath","getComposedPath","node","path","parent","parentNode","host","defaultView","target","findFromPath","criteria","currentTarget","rest","tagName","length","findElementInEventPath","ev","selector","el","Element","matches"],"mappings":"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","sourcesContent":["const listenerRegistry = new WeakMap();\nconst {addEventListener, removeEventListener} = EventTarget.prototype;\n\n// Register event listeners to a key object\n// listeners: array of listener definitions;\n//   - each definition must be a flat array of event target and the arguments\n//     used to call addEventListener() on the target\nexport function registerListeners(keyObj, listeners) {\n  let registered = listenerRegistry.get(keyObj);\n  if (!registered) {\n    registered = [];\n    listenerRegistry.set(keyObj, registered);\n  }\n  listeners.forEach((listener) => {\n    addEventListener.call(...listener);\n    registered.push(listener);\n  });\n}\n\nexport function unregisterListeners(keyObj) {\n  let listeners = listenerRegistry.get(keyObj);\n  if (!listeners) {\n    return;\n  }\n  listeners.forEach((listener) => {\n    removeEventListener.call(...listener);\n  });\n  listenerRegistry.delete(keyObj);\n}\n\n// Event.composedPath() polyfill for Edge\n// based on https://gist.github.com/kleinfreund/e9787d73776c0e3750dcfcdc89f100ec\nif (!Event.prototype.composedPath) {\n  const getComposedPath = (node, path = []) => {\n    path.push(node);\n\n    let parent;\n    if (node.parentNode) {\n      parent = node.parentNode;\n    } else if (node.host) { // ShadowRoot\n      parent = node.host;\n    } else if (node.defaultView) {  // Document\n      parent = node.defaultView;\n    }\n    return parent ? getComposedPath(parent, path) : path;\n  };\n\n  Event.prototype.composedPath = function () {\n    return getComposedPath(this.target);\n  };\n}\n\nfunction findFromPath(path, criteria, currentTarget) {\n  const [node, ...rest] = path;\n  if (criteria(node)) {\n    return node;\n  }\n  if (node === currentTarget || node.tagName === 'HTML' || rest.length === 0) {\n    // stop when reaching currentTarget or <html>\n    return;\n  }\n  return findFromPath(rest, criteria, currentTarget);\n}\n\n// Search for the actual target of a delegated event\nexport function findElementInEventPath(ev, selector) {\n  const criteria = typeof selector === 'function'\n    ? selector\n    : el => el instanceof Element && el.matches(selector);\n  return findFromPath(ev.composedPath(), criteria, ev.currentTarget);\n}\n"]},"metadata":{},"sourceType":"module"}