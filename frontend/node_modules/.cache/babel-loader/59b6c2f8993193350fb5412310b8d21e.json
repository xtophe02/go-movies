{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/genre.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchMoviesByGenreID = async id => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/genre/${id}`);\n\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport default function Genre() {\n  _s();\n\n  let params = useParams();\n  const [state, setState] = useState({\n    loading: true,\n    movies: [],\n    error: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMoviesByGenreID(params.id);\n\n      if (!res.movies) {\n        setState(prev => ({ ...prev,\n          loading: false,\n          error: res\n        }));\n      } else {\n        setState(prev => ({ ...prev,\n          loading: false,\n          movies: res.movies\n        }));\n      }\n    };\n\n    fetchData();\n  }, [params.id]);\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Movie \", params.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Genre, \"qVlH0xXJhDGm9FrxU9YZcwOKjbI=\", false, function () {\n  return [useParams];\n});\n\n_c = Genre;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/genre.js"],"names":["useParams","useState","useEffect","fetchMoviesByGenreID","id","res","fetch","ok","console","log","Error","statusText","json","error","message","Genre","params","state","setState","loading","movies","fetchData","prev"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,oBAAoB,GAAG,MAAOC,EAAP,IAAc;AACzC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,kCAAiCF,EAAG,EAAtC,CAAvB;;AACA,QAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,YAAM,IAAIK,KAAJ,CAAUL,GAAG,CAACM,UAAd,CAAN;AACD;;AACD,WAAON,GAAG,CAACO,IAAJ,EAAP;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CAXD;;AAYA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,MAAIC,MAAM,GAAGhB,SAAS,EAAtB;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC;AACjCkB,IAAAA,OAAO,EAAE,IADwB;AAEjCC,IAAAA,MAAM,EAAE,EAFyB;AAGjCP,IAAAA,KAAK,EAAE;AAH0B,GAAD,CAAlC;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,SAAS,GAAG,YAAY;AAC5B,YAAMhB,GAAG,GAAG,MAAMF,oBAAoB,CAACa,MAAM,CAACZ,EAAR,CAAtC;;AACA,UAAI,CAACC,GAAG,CAACe,MAAT,EAAiB;AACfF,QAAAA,QAAQ,CAAEI,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWH,UAAAA,OAAO,EAAE,KAApB;AAA2BN,UAAAA,KAAK,EAAER;AAAlC,SAAX,CAAD,CAAR;AACD,OAFD,MAEO;AACLa,QAAAA,QAAQ,CAAEI,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWH,UAAAA,OAAO,EAAE,KAApB;AAA2BC,UAAAA,MAAM,EAAEf,GAAG,CAACe;AAAvC,SAAX,CAAD,CAAR;AACD;AACF,KAPD;;AAQAC,IAAAA,SAAS;AACV,GAVQ,EAUN,CAACL,MAAM,CAACZ,EAAR,CAVM,CAAT;AAWAI,EAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACA,sBAAO;AAAA,yBAAYD,MAAM,CAACZ,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GApBuBW,K;UACTf,S;;;KADSe,K","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst fetchMoviesByGenreID = async (id) => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/genre/${id}`);\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\nexport default function Genre() {\n  let params = useParams();\n  const [state, setState] = useState({\n    loading: true,\n    movies: [],\n    error: null,\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMoviesByGenreID(params.id);\n      if (!res.movies) {\n        setState((prev) => ({ ...prev, loading: false, error: res }));\n      } else {\n        setState((prev) => ({ ...prev, loading: false, movies: res.movies }));\n      }\n    };\n    fetchData();\n  }, [params.id]);\n  console.log(state);\n  return <div>Movie {params.id}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}