{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/add-edit-movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"../components/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LazyMovies = /*#__PURE__*/React.lazy(_c = () => import(\"../components/lazy-movies-edit\"));\n_c2 = LazyMovies;\nconst initValues = {\n  title: \"\",\n  release_date: \"\",\n  runtime: \"\",\n  mpaa_rating: \"\",\n  rating: \"\",\n  description: \"\",\n  genres: \"\",\n  year: \"\"\n};\n\nconst fetchMovieByID = async id => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/movie/${id}`);\n\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport default function AddEditMovie() {\n  _s();\n\n  const [state, setState] = useState({ ...initValues,\n    errors: null\n  });\n  const [edit, setEdit] = useState(null);\n\n  const handlerChange = e => {\n    if (!e.target) {\n      setState(prev => ({ ...prev,\n        release_date: e\n      }));\n      return;\n    }\n\n    const {\n      name,\n      value\n    } = e.target;\n    setState(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // console.log(state.genres.split(\",\"));\n\n    const data = new FormData(e.target);\n    const payload = Object.fromEntries(data.entries());\n    const t = Object.keys(payload).map(el => {\n      let newArray = [];\n\n      if (payload[el] === \"\") {\n        setState(prev => ({ ...prev,\n          errors: newArray\n        }));\n      }\n    });\n    console.log(t); // if (state.errors.length <= 0) {\n    //   delete state.errors;\n    //   const res = await fetch(\"http://localhost:4000/v1/admin/editmovie\", {\n    //     body: JSON.stringify({ ...payload, genres: payload.genres.split(\",\") }),\n    //     method: \"POST\",\n    //     // headers: {\n    //     //   \"Content-Type\": \"application/json\",\n    //     //   // 'Content-Type': 'application/x-www-form-urlencoded',\n    //     // },\n    //   });\n    //   const json = await res.json();\n    //   console.log(json);\n    // }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovieByID(edit);\n      setState({ ...res.movie,\n        genres: Object.values(res.movie.genres).map(val => val).toString(),\n        errors: null\n      });\n    };\n\n    if (edit > 0) {\n      fetchData();\n    } else {\n      setState({ ...initValues,\n        errors: null\n      });\n    }\n  }, [edit]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"hero\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"level\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title level-left\",\n          children: \"Add/Edit Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select level-right\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setEdit(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 0,\n              children: \"New...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(React.Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"...\"\n              }, void 0, false),\n              children: /*#__PURE__*/_jsxDEV(LazyMovies, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            handlerChange: handlerChange,\n            state: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field is-grouped is-grouped-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"control\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-primary\",\n                type: \"submit\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"control\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-light\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditMovie, \"sYDgjc+7y90eyzgu/DePz+MgfuU=\");\n\n_c3 = AddEditMovie;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LazyMovies$React.lazy\");\n$RefreshReg$(_c2, \"LazyMovies\");\n$RefreshReg$(_c3, \"AddEditMovie\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/add-edit-movie.js"],"names":["React","useState","useEffect","Form","LazyMovies","lazy","initValues","title","release_date","runtime","mpaa_rating","rating","description","genres","year","fetchMovieByID","id","res","fetch","ok","console","log","Error","statusText","json","error","message","AddEditMovie","state","setState","errors","edit","setEdit","handlerChange","e","target","prev","name","value","handleSubmit","preventDefault","data","FormData","payload","Object","fromEntries","entries","t","keys","map","el","newArray","fetchData","movie","values","val","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Form from \"../components/form\";\n\nconst LazyMovies = React.lazy(() => import(\"../components/lazy-movies-edit\"));\n\nconst initValues = {\n  title: \"\",\n  release_date: \"\",\n  runtime: \"\",\n  mpaa_rating: \"\",\n  rating: \"\",\n  description: \"\",\n  genres: \"\",\n  year: \"\",\n};\n\nconst fetchMovieByID = async (id) => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/movie/${id}`);\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\nexport default function AddEditMovie() {\n  const [state, setState] = useState({ ...initValues, errors: null });\n  const [edit, setEdit] = useState(null);\n\n  const handlerChange = (e) => {\n    if (!e.target) {\n      setState((prev) => ({ ...prev, release_date: e }));\n      return;\n    }\n    const { name, value } = e.target;\n\n    setState((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // console.log(state.genres.split(\",\"));\n    const data = new FormData(e.target);\n    const payload = Object.fromEntries(data.entries());\n\n    const t = Object.keys(payload).map((el) => {\n      let newArray = [];\n      if (payload[el] === \"\") {\n        setState((prev) => ({ ...prev, errors: newArray }));\n      }\n    });\n    console.log(t);\n    // if (state.errors.length <= 0) {\n    //   delete state.errors;\n    //   const res = await fetch(\"http://localhost:4000/v1/admin/editmovie\", {\n    //     body: JSON.stringify({ ...payload, genres: payload.genres.split(\",\") }),\n    //     method: \"POST\",\n    //     // headers: {\n    //     //   \"Content-Type\": \"application/json\",\n    //     //   // 'Content-Type': 'application/x-www-form-urlencoded',\n    //     // },\n    //   });\n    //   const json = await res.json();\n    //   console.log(json);\n    // }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovieByID(edit);\n\n      setState({\n        ...res.movie,\n        genres: Object.values(res.movie.genres)\n          .map((val) => val)\n          .toString(),\n        errors: null,\n      });\n    };\n    if (edit > 0) {\n      fetchData();\n    } else {\n      setState({ ...initValues, errors: null });\n    }\n  }, [edit]);\n\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <div className=\"level\">\n          <p className=\"title level-left\">Add/Edit Movie</p>\n          <div className=\"select level-right\">\n            <select onChange={(e) => setEdit(e.target.value)}>\n              <option value={0}>New...</option>\n              <React.Suspense fallback={<>...</>}>\n                <LazyMovies />\n              </React.Suspense>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          <form onSubmit={handleSubmit}>\n            <Form handlerChange={handlerChange} state={state} />\n            <div className=\"field is-grouped is-grouped-right\">\n              <p className=\"control\">\n                <button className=\"button is-primary\" type=\"submit\">\n                  Save\n                </button>\n              </p>\n              <p className=\"control\">\n                <button className=\"button is-light\">Cancel</button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}