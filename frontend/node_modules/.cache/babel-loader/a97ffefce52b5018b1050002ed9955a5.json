{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/movies-graphql.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport SearchBox from \"../components/search-box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst query = `{\n  allMovies {\n    id\n    title\n    year\n    description\n    runtime\n  }\n}`;\nexport default function MoviesGraphql() {\n  _s();\n\n  const [state, setState] = useState({\n    loading: true,\n    movies: [],\n    errors: null,\n    clear: false\n  });\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const query = `{\n      allMovies {\n        id\n        title\n        year\n        description\n        runtime\n      }\n    }`;\n    fetch(\"http://localhost:4000/v1/graphql\", {\n      signal: signal,\n      method: \"post\",\n      body: query,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(_ref => {\n      let {\n        data\n      } = _ref;\n      // console.log(data);\n      setState({\n        movies: data.allMovies,\n        loading: false,\n        clear: false\n      });\n    }).catch(err => {\n      if (err.name === \"AbortError\") {\n        console.log(\"successfully aborted\");\n      } else {\n        console.log(err); // setError(err);\n      }\n    });\n    return () => controller.abort();\n  }, [state.clear]);\n\n  if (state.loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (state.error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: state.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"hero\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"Choose a Movie GRAPHQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        state: state,\n        setState: setState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table is-striped is-hoverable\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: state.movies.length > 0 ? state.movies.map(mv => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"is-clickable\",\n              onClick: () => console.log(mv.id),\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: mv.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 51\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"has-text-grey\",\n                  children: [\"(\", mv.year, \") - \", mv.runtime, \" min\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [mv.description.slice(0, 100), \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)\n            }, mv.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"has-text-grey\",\n              children: \"no movies on database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MoviesGraphql, \"mwjTMzsOhanY1wYd4fgpG2gzpgI=\");\n\n_c = MoviesGraphql;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesGraphql\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/movies-graphql.js"],"names":["useEffect","useState","Outlet","SearchBox","query","MoviesGraphql","state","setState","loading","movies","errors","clear","controller","AbortController","signal","fetch","method","body","headers","then","res","json","data","allMovies","catch","err","name","console","log","abort","error","length","map","mv","id","title","year","runtime","description","slice"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport SearchBox from \"../components/search-box\";\n\nconst query = `{\n  allMovies {\n    id\n    title\n    year\n    description\n    runtime\n  }\n}`;\n\nexport default function MoviesGraphql() {\n  const [state, setState] = useState({\n    loading: true,\n    movies: [],\n    errors: null,\n    clear: false,\n  });\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const query = `{\n      allMovies {\n        id\n        title\n        year\n        description\n        runtime\n      }\n    }`;\n    fetch(\"http://localhost:4000/v1/graphql\", {\n      signal: signal,\n      method: \"post\",\n      body: query,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then(({ data }) => {\n        // console.log(data);\n        setState({ movies: data.allMovies, loading: false, clear: false });\n      })\n      .catch((err) => {\n        if (err.name === \"AbortError\") {\n          console.log(\"successfully aborted\");\n        } else {\n          console.log(err);\n          // setError(err);\n        }\n      });\n    return () => controller.abort();\n  }, [state.clear]);\n  if (state.loading) {\n    return <p>loading...</p>;\n  }\n  if (state.error) {\n    return <p>{state.error}</p>;\n  }\n\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <p className=\"title\">Choose a Movie GRAPHQL</p>\n        <SearchBox state={state} setState={setState} />\n        <div className=\"content\">\n          <table className=\"table is-striped is-hoverable\">\n            <tbody>\n              {state.movies.length > 0 ? (\n                state.movies.map((mv) => (\n                  <tr\n                    key={mv.id}\n                    className=\"is-clickable\"\n                    onClick={() => console.log(mv.id)}\n                  >\n                    <td>\n                      <strong>{mv.title}</strong> <br />\n                      <small className=\"has-text-grey\">\n                        ({mv.year}) - {mv.runtime} min\n                      </small>\n                      <br />\n                      <small>{mv.description.slice(0, 100)}...</small>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <p className=\"has-text-grey\">no movies on database</p>\n              )}\n            </tbody>\n          </table>\n        </div>\n        <Outlet />\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}