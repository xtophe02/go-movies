{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/all-genres.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchMovies = async () => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/genres`);\n\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport default function Genres(_ref) {\n  _s();\n\n  let {\n    moviegenres,\n    setState\n  } = _ref;\n  const [tags, setTags] = useState({\n    genres: [],\n    error: null,\n    loading: true,\n    tagGenre: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovies();\n\n      if (!res.genres) {\n        setTags(prev => ({ ...prev,\n          loading: false,\n          error: res\n        }));\n      } else {\n        setTags(prev => ({ ...prev,\n          loading: false,\n          genres: res.genres,\n          tagGenre: Object.values(moviegenres).length > 0 ? Object.values(moviegenres) : []\n        }));\n      }\n    };\n\n    fetchData();\n  }, [moviegenres]);\n\n  const handleTag = e => {\n    const [value, name] = e.target.value.split(\"-\");\n    let newArray = tags.tagGenre;\n    let newArray2 = tags.tagGenre;\n    newArray.push(name);\n    newArray2.push({\n      value: name\n    });\n    setTags(prev => ({ ...prev,\n      tagGenre: newArray\n    }));\n    setState(prev => ({ ...prev,\n      genres: newArray2\n    }));\n  };\n\n  const onDelete = name => {\n    let newArray = tags.tagGenre;\n    newArray.filter(el => el.toLowerCase() !== name.toLowerCase());\n    setTags(prev => ({ ...prev,\n      tagGenre: newArray.filter(el => el !== name)\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"level\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: handleTag,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"Choose...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), tags.genres.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `${g.id}-${g.genre_name}`,\n                children: g.genre_name\n              }, g.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-right\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags\",\n        children: tags.tagGenre.map(el => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag \",\n          children: [el, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete is-small\",\n            onClick: () => onDelete(el)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, el, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Genres, \"JAmAwKs+s0dH0FgRWn3JTPpw2us=\");\n\n_c = Genres;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/all-genres.js"],"names":["useState","useEffect","fetchMovies","res","fetch","ok","console","log","Error","statusText","json","error","message","Genres","moviegenres","setState","tags","setTags","genres","loading","tagGenre","fetchData","prev","Object","values","length","handleTag","e","value","name","target","split","newArray","newArray2","push","onDelete","filter","el","toLowerCase","map","g","id","genre_name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst fetchMovies = async () => {\n  try {\n    const res = await fetch(`http://localhost:4000/v1/genres`);\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\nexport default function Genres({ moviegenres, setState }) {\n  const [tags, setTags] = useState({\n    genres: [],\n    error: null,\n    loading: true,\n    tagGenre: [],\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovies();\n      if (!res.genres) {\n        setTags((prev) => ({ ...prev, loading: false, error: res }));\n      } else {\n        setTags((prev) => ({\n          ...prev,\n          loading: false,\n          genres: res.genres,\n          tagGenre:\n            Object.values(moviegenres).length > 0\n              ? Object.values(moviegenres)\n              : [],\n        }));\n      }\n    };\n    fetchData();\n  }, [moviegenres]);\n\n  const handleTag = (e) => {\n    const [value, name] = e.target.value.split(\"-\");\n    let newArray = tags.tagGenre;\n    let newArray2 = tags.tagGenre;\n    newArray.push(name);\n    newArray2.push({ value: name });\n    setTags((prev) => ({ ...prev, tagGenre: newArray }));\n    setState((prev) => ({ ...prev, genres: newArray2 }));\n  };\n  const onDelete = (name) => {\n    let newArray = tags.tagGenre;\n\n    newArray.filter((el) => el.toLowerCase() !== name.toLowerCase());\n\n    setTags((prev) => ({\n      ...prev,\n      tagGenre: newArray.filter((el) => el !== name),\n    }));\n  };\n  return (\n    <div className=\"level\">\n      <div className=\"level-left\">\n        <div className=\"field\">\n          <label className=\"label\">Genres</label>\n          <div className=\"control\">\n            <div className=\"select\">\n              <select onChange={handleTag}>\n                <option value={0}>Choose...</option>\n                {tags.genres.map((g) => (\n                  <option key={g.id} value={`${g.id}-${g.genre_name}`}>\n                    {g.genre_name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"level-right\">\n        <div className=\"tags\">\n          {tags.tagGenre.map((el) => (\n            <span className=\"tag \" key={el}>\n              {el}\n              <button\n                className=\"delete is-small\"\n                onClick={() => onDelete(el)}\n              ></button>\n            </span>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}