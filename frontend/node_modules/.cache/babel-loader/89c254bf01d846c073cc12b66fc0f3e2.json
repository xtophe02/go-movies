{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Notification from \"../components/notification\";\nimport { useSetStateCtx } from \"../context/use-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initValues = {\n  email: \"\",\n  password: \"\",\n  errors: null,\n  loading: false\n};\nexport default function Login() {\n  _s();\n\n  var _state$errors, _state$errors2, _state$errors3, _state$errors4, _state$errors5, _state$errors6, _state$errors7;\n\n  const [state, setState] = useState(initValues);\n  const setJwt = useSetStateCtx();\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setState(prev => ({ ...prev,\n      errors: null,\n      loading: true\n    }));\n    const formData = new FormData(e.target);\n    const payload = Object.fromEntries(formData.entries());\n    const errors = {};\n    Object.keys(payload).map(k => {\n      if (payload[k] === \"\") {\n        errors[k] = \"cannot be empty\";\n        return errors;\n      }\n\n      return errors;\n    });\n\n    if (Object.keys(errors).length !== 0) {\n      setState(prev => ({ ...prev,\n        errors,\n        loading: false\n      }));\n      return;\n    } else {\n      const res = await fetch(\"http://localhost:4000/v1/signin\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: state.email,\n          password: state.password\n        })\n      }); // console.log(res);\n\n      const json = await res.json();\n\n      if (res.ok) {\n        setState(prev => ({ ...prev,\n          loading: false\n        }));\n        window.localStorage.setItem(\"jwt\", JSON.stringify(json.response));\n        setJwt({\n          jwt: json.response\n        });\n        navigate(\"/\");\n      } else {\n        setState(prev => ({ ...prev,\n          errors: json.error,\n          loading: false\n        }));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [((_state$errors = state.errors) === null || _state$errors === void 0 ? void 0 : _state$errors.message) && /*#__PURE__*/_jsxDEV(Notification, {\n      type: \"is-danger\",\n      message: state.errors.message,\n      setState: setState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `input ${((_state$errors2 = state.errors) === null || _state$errors2 === void 0 ? void 0 : _state$errors2.email) && \"is-danger\"}`,\n            type: \"text\",\n            placeholder: \"email@example.com\",\n            name: \"email\",\n            value: state.email,\n            onChange: e => setState(prev => ({ ...prev,\n              email: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), ((_state$errors3 = state.errors) === null || _state$errors3 === void 0 ? void 0 : _state$errors3.email) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"help is-danger\",\n          children: (_state$errors4 = state.errors) === null || _state$errors4 === void 0 ? void 0 : _state$errors4.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `input ${((_state$errors5 = state.errors) === null || _state$errors5 === void 0 ? void 0 : _state$errors5.password) && \"is-danger\"}`,\n            type: \"password\",\n            name: \"password\",\n            value: state.password,\n            onChange: e => setState(prev => ({ ...prev,\n              password: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), ((_state$errors6 = state.errors) === null || _state$errors6 === void 0 ? void 0 : _state$errors6.password) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"help is-danger\",\n          children: (_state$errors7 = state.errors) === null || _state$errors7 === void 0 ? void 0 : _state$errors7.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field is-grouped\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `button is-link ${state.loading && \"is-loading\"}`,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-link is-light\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"esM5ijIR4iGpqhDhEZU7MJ8k8FM=\", false, function () {\n  return [useSetStateCtx, useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/routes/login.js"],"names":["React","useState","useNavigate","Notification","useSetStateCtx","initValues","email","password","errors","loading","Login","state","setState","setJwt","navigate","handleSubmit","e","preventDefault","prev","formData","FormData","target","payload","Object","fromEntries","entries","keys","map","k","length","res","fetch","method","body","JSON","stringify","json","ok","window","localStorage","setItem","response","jwt","error","message","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Notification from \"../components/notification\";\nimport { useSetStateCtx } from \"../context/use-context\";\n\nconst initValues = {\n  email: \"\",\n  password: \"\",\n  errors: null,\n  loading: false,\n};\n\nexport default function Login() {\n  const [state, setState] = useState(initValues);\n  const setJwt = useSetStateCtx();\n  const navigate = useNavigate();\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setState((prev) => ({ ...prev, errors: null, loading: true }));\n    const formData = new FormData(e.target);\n    const payload = Object.fromEntries(formData.entries());\n\n    const errors = {};\n    Object.keys(payload).map((k) => {\n      if (payload[k] === \"\") {\n        errors[k] = \"cannot be empty\";\n        return errors;\n      }\n      return errors;\n    });\n\n    if (Object.keys(errors).length !== 0) {\n      setState((prev) => ({ ...prev, errors, loading: false }));\n\n      return;\n    } else {\n      const res = await fetch(\"http://localhost:4000/v1/signin\", {\n        method: \"POST\",\n        body: JSON.stringify({ email: state.email, password: state.password }),\n      });\n      // console.log(res);\n      const json = await res.json();\n      if (res.ok) {\n        setState((prev) => ({ ...prev, loading: false }));\n        window.localStorage.setItem(\"jwt\", JSON.stringify(json.response));\n        setJwt({ jwt: json.response });\n        navigate(\"/\");\n      } else {\n        setState((prev) => ({\n          ...prev,\n          errors: json.error,\n          loading: false,\n        }));\n      }\n    }\n  };\n\n  return (\n    <>\n      {state.errors?.message && (\n        <Notification\n          type=\"is-danger\"\n          message={state.errors.message}\n          setState={setState}\n        />\n      )}\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\">Email</label>\n          <div className=\"control\">\n            <input\n              className={`input ${state.errors?.email && \"is-danger\"}`}\n              type=\"text\"\n              placeholder=\"email@example.com\"\n              name=\"email\"\n              value={state.email}\n              onChange={(e) =>\n                setState((prev) => ({ ...prev, email: e.target.value }))\n              }\n            />\n          </div>\n          {state.errors?.email && (\n            <p className=\"help is-danger\">{state.errors?.email}</p>\n          )}\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Password</label>\n          <div className=\"control\">\n            <input\n              className={`input ${state.errors?.password && \"is-danger\"}`}\n              type=\"password\"\n              name=\"password\"\n              value={state.password}\n              onChange={(e) =>\n                setState((prev) => ({ ...prev, password: e.target.value }))\n              }\n            />\n          </div>\n          {state.errors?.password && (\n            <p className=\"help is-danger\">{state.errors?.password}</p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              className={`button is-link ${state.loading && \"is-loading\"}`}\n              type=\"submit\"\n            >\n              Submit\n            </button>\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-link is-light\">Cancel</button>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}