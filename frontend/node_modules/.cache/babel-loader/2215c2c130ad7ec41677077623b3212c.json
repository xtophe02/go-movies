{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/lazy-movies-edit.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchMovies = async () => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_URl}/v1/movies`);\n\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport default function LazyMovies() {\n  _s();\n\n  const [state, setState] = useState({\n    movies: [],\n    error: null,\n    loading: true\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovies();\n\n      if (!res.movies) {\n        setState(prev => ({ ...prev,\n          loading: false,\n          error: res\n        }));\n      } else {\n        setState(prev => ({ ...prev,\n          loading: false,\n          movies: res.movies\n        }));\n      }\n    };\n\n    fetchData();\n  }, []);\n  return state.movies.map(mv => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: mv.id,\n    children: mv.title\n  }, mv.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this));\n}\n\n_s(LazyMovies, \"+M9yx+NOjZUaGBQkzpaBEZj1NcY=\");\n\n_c = LazyMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"LazyMovies\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/lazy-movies-edit.js"],"names":["useState","useEffect","fetchMovies","res","fetch","process","env","REACT_APP_URl","ok","console","log","Error","statusText","json","error","message","LazyMovies","state","setState","movies","loading","fetchData","prev","map","mv","id","title"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,WAAW,GAAG,YAAY;AAC9B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,aAAc,YAA9B,CAAvB;;AACA,QAAI,CAACJ,GAAG,CAACK,EAAT,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACA,YAAM,IAAIQ,KAAJ,CAAUR,GAAG,CAACS,UAAd,CAAN;AACD;;AACD,WAAOT,GAAG,CAACU,IAAJ,EAAP;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CAXD;;AAYA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC;AACjCmB,IAAAA,MAAM,EAAE,EADyB;AAEjCL,IAAAA,KAAK,EAAE,IAF0B;AAGjCM,IAAAA,OAAO,EAAE;AAHwB,GAAD,CAAlC;AAKAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,SAAS,GAAG,YAAY;AAC5B,YAAMlB,GAAG,GAAG,MAAMD,WAAW,EAA7B;;AACA,UAAI,CAACC,GAAG,CAACgB,MAAT,EAAiB;AACfD,QAAAA,QAAQ,CAAEI,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWF,UAAAA,OAAO,EAAE,KAApB;AAA2BN,UAAAA,KAAK,EAAEX;AAAlC,SAAX,CAAD,CAAR;AACD,OAFD,MAEO;AACLe,QAAAA,QAAQ,CAAEI,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWF,UAAAA,OAAO,EAAE,KAApB;AAA2BD,UAAAA,MAAM,EAAEhB,GAAG,CAACgB;AAAvC,SAAX,CAAD,CAAR;AACD;AACF,KAPD;;AAQAE,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAOJ,KAAK,CAACE,MAAN,CAAaI,GAAb,CAAkBC,EAAD,iBACtB;AAAoB,IAAA,KAAK,EAAEA,EAAE,CAACC,EAA9B;AAAA,cACGD,EAAE,CAACE;AADN,KAAaF,EAAE,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAKD;;GAvBuBT,U;;KAAAA,U","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst fetchMovies = async () => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_URl}/v1/movies`);\n    if (!res.ok) {\n      console.log(res);\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  } catch (error) {\n    return error.message;\n  }\n};\nexport default function LazyMovies() {\n  const [state, setState] = useState({\n    movies: [],\n    error: null,\n    loading: true,\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetchMovies();\n      if (!res.movies) {\n        setState((prev) => ({ ...prev, loading: false, error: res }));\n      } else {\n        setState((prev) => ({ ...prev, loading: false, movies: res.movies }));\n      }\n    };\n    fetchData();\n  }, []);\n\n  return state.movies.map((mv) => (\n    <option key={mv.id} value={mv.id}>\n      {mv.title}\n    </option>\n  ));\n}\n"]},"metadata":{},"sourceType":"module"}