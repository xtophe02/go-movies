{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/delete-modal.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeleteModal(_ref) {\n  let {\n    modal,\n    setModal\n  } = _ref;\n\n  const deleteMovie = async () => {\n    const res = await fetch(`/v1/admin/deletemovie/${modal.id}`, {\n      method: \"DELETE\"\n    });\n\n    if (res.ok) {\n      setModal(prev => ({ ...prev,\n        open: !prev.open\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${modal.open && \"is-active\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Do you realy want to delete?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"subtitle\",\n        children: modal.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field is-grouped\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => setModal(prev => ({ ...prev,\n              open: !prev.open\n            })),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-danger\",\n            onClick: deleteMovie,\n            children: \"Delete Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modal-close is-large\",\n      \"aria-label\": \"close\",\n      onClick: () => setModal(prev => ({ ...prev,\n        open: !prev.open\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = DeleteModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/delete-modal.js"],"names":["React","DeleteModal","modal","setModal","deleteMovie","res","fetch","id","method","ok","prev","open","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,WAAT,OAA0C;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;;AACvD,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,yBAAwBJ,KAAK,CAACK,EAAG,EAAnC,EAAsC;AAC3DC,MAAAA,MAAM,EAAE;AADmD,KAAtC,CAAvB;;AAGA,QAAIH,GAAG,CAACI,EAAR,EAAY;AACVN,MAAAA,QAAQ,CAAEO,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWC,QAAAA,IAAI,EAAE,CAACD,IAAI,CAACC;AAAvB,OAAX,CAAD,CAAR;AACD;AACF,GAPD;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAG,SAAQT,KAAK,CAACS,IAAN,IAAc,WAAY,EAAnD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,kBAA0BT,KAAK,CAACU;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,QADZ;AAEE,YAAA,OAAO,EAAE,MACPT,QAAQ,CAAEO,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWC,cAAAA,IAAI,EAAE,CAACD,IAAI,CAACC;AAAvB,aAAX,CAAD,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,kBAAlB;AAAqC,YAAA,OAAO,EAAEP,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAuBE;AACE,MAAA,SAAS,EAAC,sBADZ;AAEE,oBAAW,OAFb;AAGE,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAAEO,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWC,QAAAA,IAAI,EAAE,CAACD,IAAI,CAACC;AAAvB,OAAX,CAAD;AAHzB;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;KAxCuBV,W","sourcesContent":["import React from \"react\";\n\nexport default function DeleteModal({ modal, setModal }) {\n  const deleteMovie = async () => {\n    const res = await fetch(`/v1/admin/deletemovie/${modal.id}`, {\n      method: \"DELETE\",\n    });\n    if (res.ok) {\n      setModal((prev) => ({ ...prev, open: !prev.open }));\n    }\n  };\n  return (\n    <div className={`modal ${modal.open && \"is-active\"}`}>\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-content box\">\n        <h3 className=\"title\">Do you realy want to delete?</h3>\n        <h5 className=\"subtitle\">{modal.title}</h5>\n        <div className=\"field is-grouped\">\n          <p className=\"control\">\n            <button\n              className=\"button\"\n              onClick={() =>\n                setModal((prev) => ({ ...prev, open: !prev.open }))\n              }\n            >\n              Cancel\n            </button>\n          </p>\n          <p className=\"control\">\n            <button className=\"button is-danger\" onClick={deleteMovie}>\n              Delete Movie\n            </button>\n          </p>\n        </div>\n      </div>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={() => setModal((prev) => ({ ...prev, open: !prev.open }))}\n      ></button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}