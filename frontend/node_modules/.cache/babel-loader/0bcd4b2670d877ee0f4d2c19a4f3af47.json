{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/search-box.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBox(_ref) {\n  _s();\n\n  let {\n    state,\n    setState\n  } = _ref;\n  const [search, setSearch] = useState(\"\");\n\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n    setSearch(value);\n    const query = `{\n      search(titleContains: \"${search}\"){\n        id\n        title\n        year\n        description\n        runtime\n      }\n    }`;\n    fetch(\"http://localhost:4000/v1/graphql\", {\n      method: \"post\",\n      body: query,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      console.log(data);\n      setState({\n        movies: data.search,\n        loading: false,\n        clear: false\n      });\n    }).catch(err => {\n      if (err.name === \"AbortError\") {\n        console.log(\"successfully aborted\");\n      } else {\n        console.log(err); // setError(err);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field has-addons\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control is-expanded\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Find a movie title\",\n        value: search // name=\"searchTerm\"\n        ,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-danger\",\n        onClick: () => {\n          setState(prev => ({ ...prev,\n            clear: !prev.clear\n          }));\n          setSearch(\"\");\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBox, \"42GASUL8pX2/N6Oh5HTh0GvQEF0=\");\n\n_c = SearchBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/go-movies/frontend/src/components/search-box.js"],"names":["React","useState","SearchBox","state","setState","search","setSearch","handleChange","e","value","target","query","fetch","method","body","headers","then","res","json","data","console","log","movies","loading","clear","catch","err","name","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,SAAT,OAAwC;AAAA;;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AACrD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,CAAC,CAACE,MAApB;AACAJ,IAAAA,SAAS,CAACG,KAAD,CAAT;AACA,UAAME,KAAK,GAAI;AACnB,+BAA+BN,MAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,MARI;AASAO,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCC,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,IAAI,EAAEH,KAFkC;AAGxCI,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH+B,KAArC,CAAL,CAOGC,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQQ,SAAc;AAAA,UAAb;AAAEG,QAAAA;AAAF,OAAa;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAf,MAAAA,QAAQ,CAAC;AAAEkB,QAAAA,MAAM,EAAEH,IAAI,CAACd,MAAf;AAAuBkB,QAAAA,OAAO,EAAE,KAAhC;AAAuCC,QAAAA,KAAK,EAAE;AAA9C,OAAD,CAAR;AACD,KAXH,EAYGC,KAZH,CAYUC,GAAD,IAAS;AACd,UAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BP,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ,EADK,CAEL;AACD;AACF,KAnBH;AAoBD,GAhCD;;AAkCA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,oBAHd;AAIE,QAAA,KAAK,EAAErB,MAJT,CAKE;AALF;AAME,QAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbH,UAAAA,QAAQ,CAAEwB,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWJ,YAAAA,KAAK,EAAE,CAACI,IAAI,CAACJ;AAAxB,WAAX,CAAD,CAAR;AACAlB,UAAAA,SAAS,CAAC,EAAD,CAAT;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA7DuBJ,S;;KAAAA,S","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function SearchBox({ state, setState }) {\n  const [search, setSearch] = useState(\"\");\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setSearch(value);\n    const query = `{\n      search(titleContains: \"${search}\"){\n        id\n        title\n        year\n        description\n        runtime\n      }\n    }`;\n    fetch(\"http://localhost:4000/v1/graphql\", {\n      method: \"post\",\n      body: query,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then(({ data }) => {\n        console.log(data);\n        setState({ movies: data.search, loading: false, clear: false });\n      })\n      .catch((err) => {\n        if (err.name === \"AbortError\") {\n          console.log(\"successfully aborted\");\n        } else {\n          console.log(err);\n          // setError(err);\n        }\n      });\n  };\n\n  return (\n    <div className=\"field has-addons\">\n      <div className=\"control is-expanded\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Find a movie title\"\n          value={search}\n          // name=\"searchTerm\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"control\">\n        <button\n          className=\"button is-danger\"\n          onClick={() => {\n            setState((prev) => ({ ...prev, clear: !prev.clear }));\n            setSearch(\"\");\n          }}\n        >\n          Clear\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}